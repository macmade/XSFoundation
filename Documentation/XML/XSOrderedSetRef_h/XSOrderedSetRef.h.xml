<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE header PUBLIC "-//Apple Computer//DTD HEADERDOC 1.6//EN" "/System/Library/DTDs/HeaderDoc-1.6.dtd">
<header id="//xsdoc_ref/doc/header/XSOrderedSetRef.h" lang="c" filename="XSOrderedSetRef.h" headerpath="/Users/macmade/Documents/Macmade/Development/GitHub/XSFoundation/XSFoundation/include/XS/Classes/XSOrderedSetRef.h"><name>XSOrderedSetRef.h</name>
<abstract><p>XSOrderedSet class
</p></abstract>
<attributes><attribute><name>Author</name><value>Jean-David Gadina - www.xs-labs.com</value></attribute>
</attributes>
<includes>
<include><hd_link logicalPath="//xsdoc_ref/doc/header/XSTypes.h">&lt;XS/XSTypes.h&gt;</hd_link></include>
<include><hd_link logicalPath="//xsdoc_ref/doc/header/XSMacros.h">&lt;XS/XSMacros.h&gt;</hd_link></include>
</includes>
<desc><p>...
</p></desc>
<functions><function id="//xsdoc_ref/c/func/XSOrderedSet_AddObject" lang="c"><name>XSOrderedSet_AddObject</name>
<abstract><p>Adds an object in an ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
<parameter><name>object</name><desc><p>The object (cannot be NULL)</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSMutableOrderedSetRef</type><name>set</name></parsedparameter>
<parsedparameter><type>XSObjectRef</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT bool</returntype>
<result><p>True if the object was added, otherwise false
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>bool</declaration_type> <declaration_function>XSOrderedSet_AddObject</declaration_function>(
    <declaration_type>XSMutableOrderedSetRef</declaration_type> <declaration_param>set</declaration_param>,
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_AppendArray" lang="c"><name>XSOrderedSet_AppendArray</name>
<abstract><p>Appends values from an array to an ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
<parameter><name>objects</name><desc><p>The ordered set with the objects to append</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSMutableOrderedSetRef</type><name>set</name></parsedparameter>
<parsedparameter><type>XSArrayRef</type><name>objects</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSOrderedSet_AppendArray</declaration_function>(
    <declaration_type>XSMutableOrderedSetRef</declaration_type> <declaration_param>set</declaration_param>,
    <declaration_type>XSArrayRef</declaration_type> <declaration_param>objects</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_ApplyFunction" lang="c"><name>XSOrderedSet_ApplyFunction</name>
<abstract><p>Applies a function for each element of an ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
<parameter><name>function</name><desc><p>The function to apply</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSOrderedSetRef</type><name>set</name></parsedparameter>
<parsedparameter><type>XSOrderedSet_ApplierFunction</type><name>function</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSOrderedSet_ApplierFunction</name><value><hd_link logicalPath="XSOrderedSet_ApplierFunction" isseealso="yes">XSOrderedSet_ApplierFunction</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSOrderedSet_ApplyFunction</declaration_function>(
    <declaration_type>XSOrderedSetRef</declaration_type> <declaration_param>set</declaration_param>,
    <declaration_type>XSOrderedSet_ApplierFunction</declaration_type> <declaration_param>function</declaration_param> );  </declaration>
<desc><p>The function will be called with each object contained in the ordered set
</p></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_ApplyMethod" lang="c"><name>XSOrderedSet_ApplyMethod</name>
<abstract><p>Applies a method for each element of an ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
<parameter><name>object</name><desc><p>The object on which to call the method</p></desc></parameter>
<parameter><name>method</name><desc><p>The function to apply</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSOrderedSetRef</type><name>set</name></parsedparameter>
<parsedparameter><type>XSObjectRef</type><name>object</name></parsedparameter>
<parsedparameter><type>XSOrderedSet_ApplierMethod</type><name>method</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSOrderedSet_ApplierMethod</name><value><hd_link logicalPath="XSOrderedSet_ApplierMethod" isseealso="yes">XSOrderedSet_ApplierMethod</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSOrderedSet_ApplyMethod</declaration_function>(
    <declaration_type>XSOrderedSetRef</declaration_type> <declaration_param>set</declaration_param>,
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>object</declaration_param>,
    <declaration_type>XSOrderedSet_ApplierMethod</declaration_type> <declaration_param>method</declaration_param> );  </declaration>
<desc><p>The method will be called with each object contained in the ordered set
</p></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_ContainsObject" lang="c"><name>XSOrderedSet_ContainsObject</name>
<abstract><p>Checks if a specific object is present in an ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSOrderedSetRef</type><name>set</name></parsedparameter>
<parsedparameter><type>XSObjectRef</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT bool</returntype>
<result><p>True if the ordered set contains the object, otherwise false
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>bool</declaration_type> <declaration_function>XSOrderedSet_ContainsObject</declaration_function>(
    <declaration_type>XSOrderedSetRef</declaration_type> <declaration_param>set</declaration_param>,
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_Create" lang="c"><name>XSOrderedSet_Create</name>
<abstract><p>Creates an empty ordered set
</p></abstract>
<returntype> XS_EXPORT XSStatic XSOrderedSetRef</returntype>
<result><p>An empty ordered set
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSOrderedSetRef</declaration_type> <declaration_function>XSOrderedSet_Create</declaration_function>(
    <declaration_param>void</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_CreateMutable" lang="c"><name>XSOrderedSet_CreateMutable</name>
<abstract><p>Creates an empty mutable ordered set
</p></abstract>
<returntype> XS_EXPORT XSStatic XSMutableOrderedSetRef</returntype>
<result><p>An empty mutable ordered set
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSMutableOrderedSetRef</declaration_type> <declaration_function>XSOrderedSet_CreateMutable</declaration_function>(
    <declaration_param>void</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_CreateMutableCopy" lang="c"><name>XSOrderedSet_CreateMutableCopy</name>
<abstract><p>Creates a mutable copy of an ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSOrderedSetRef</type><name>set</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSMutableOrderedSetRef</returntype>
<result><p>The mutable copy of the ordered set
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSMutableOrderedSetRef</declaration_type> <declaration_function>XSOrderedSet_CreateMutableCopy</declaration_function>(
    <declaration_type>XSOrderedSetRef</declaration_type> <declaration_param>set</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_CreateWithArray" lang="c"><name>XSOrderedSet_CreateWithArray</name>
<abstract><p>Creates an ordered set filled with objects contained in an array
</p></abstract>
<parameterlist>
<parameter><name>array</name><desc><p>The array with the objects to add</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSArrayRef</type><name>array</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSOrderedSetRef</returntype>
<result><p>An ordered set containing the objects contained in the array
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSOrderedSetRef</declaration_type> <declaration_function>XSOrderedSet_CreateWithArray</declaration_function>(
    <declaration_type>XSArrayRef</declaration_type> <declaration_param>array</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_CreateWithObjects" lang="c"><name>XSOrderedSet_CreateWithObjects</name>
<abstract><p>Creates an ordered set filled with objects
</p></abstract>
<parameterlist>
<parameter><name>firstObject</name><desc><p>The first object to add</p></desc></parameter>
<parameter><name>...</name><desc><p>Additional objects to add, terminated by NULL</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>firstObject</name></parsedparameter>
<parsedparameter><type> ...</type><name>...</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSOrderedSetRef</returntype>
<result><p>An ordered set containing the specified objects
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSOrderedSetRef</declaration_type> <declaration_function>XSOrderedSet_CreateWithObjects</declaration_function>(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>firstObject</declaration_param>,
    ... );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_CreateWithOrderedSet" lang="c"><name>XSOrderedSet_CreateWithOrderedSet</name>
<abstract><p>Creates an ordered set from another ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSOrderedSetRef</type><name>set</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSAutoreleased XSOrderedSetRef</returntype>
<result><p>An immutable ordered set based on the given ordered set
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSAutoreleased</declaration_type> <declaration_type>XSOrderedSetRef</declaration_type> <declaration_function>XSOrderedSet_CreateWithOrderedSet</declaration_function>(
    <declaration_type>XSOrderedSetRef</declaration_type> <declaration_param>set</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_FilterWithFunction" lang="c"><name>XSOrderedSet_FilterWithFunction</name>
<abstract><p>Filters an ordered set using a function
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
<parameter><name>function</name><desc><p>The function used to filter the ordered set</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSMutableOrderedSetRef</type><name>set</name></parsedparameter>
<parsedparameter><type>XSOrderedSet_FilterFunction</type><name>function</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSOrderedSet_FilterFunction</name><value><hd_link logicalPath="XSOrderedSet_FilterFunction" isseealso="yes">XSOrderedSet_FilterFunction</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSOrderedSet_FilterWithFunction</declaration_function>(
    <declaration_type>XSMutableOrderedSetRef</declaration_type> <declaration_param>set</declaration_param>,
    <declaration_type>XSOrderedSet_FilterFunction</declaration_type> <declaration_param>function</declaration_param> );  </declaration>
<desc><p>The function will be called with each object contained in the ordered set
</p></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_FilterWithMethod" lang="c"><name>XSOrderedSet_FilterWithMethod</name>
<abstract><p>Filters an ordered set using a method
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
<parameter><name>object</name><desc><p>The object on which to call the method</p></desc></parameter>
<parameter><name>method</name><desc><p>The function used to filter the ordered set</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSMutableOrderedSetRef</type><name>set</name></parsedparameter>
<parsedparameter><type>XSObjectRef</type><name>object</name></parsedparameter>
<parsedparameter><type>XSOrderedSet_FilterMethod</type><name>method</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSOrderedSet_FilterMethod</name><value><hd_link logicalPath="XSOrderedSet_FilterMethod" isseealso="yes">XSOrderedSet_FilterMethod</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSOrderedSet_FilterWithMethod</declaration_function>(
    <declaration_type>XSMutableOrderedSetRef</declaration_type> <declaration_param>set</declaration_param>,
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>object</declaration_param>,
    <declaration_type>XSOrderedSet_FilterMethod</declaration_type> <declaration_param>method</declaration_param> );  </declaration>
<desc><p>The method will be called with each object contained in the ordered set
</p></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_GetAllValues" lang="c"><name>XSOrderedSet_GetAllValues</name>
<abstract><p>Gets all values from an ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSOrderedSetRef</type><name>set</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSArrayRef</returntype>
<result><p>An array with all the ordered set's values
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSArrayRef</declaration_type> <declaration_function>XSOrderedSet_GetAllValues</declaration_function>(
    <declaration_type>XSOrderedSetRef</declaration_type> <declaration_param>set</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_GetClassID" lang="c"><name>XSOrderedSet_GetClassID</name>
<abstract><p>Gets the class ID for XSOrderedSet
</p></abstract>
<returntype> XS_EXPORT XSStatic XSClassID</returntype>
<result><p>The class ID for XSOrderedSet
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSClassID</declaration_type> <declaration_function>XSOrderedSet_GetClassID</declaration_function>(
    <declaration_param>void</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_GetCount" lang="c"><name>XSOrderedSet_GetCount</name>
<abstract><p>Gets the number of values in an ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSOrderedSetRef</type><name>set</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSUInteger</returntype>
<result><p>The number of values in an ordered set
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSUInteger</declaration_type> <declaration_function>XSOrderedSet_GetCount</declaration_function>(
    <declaration_type>XSOrderedSetRef</declaration_type> <declaration_param>set</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_GetIndexOfObject" lang="c"><name>XSOrderedSet_GetIndexOfObject</name>
<abstract><p>Gets the index of an object in an ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
<parameter><name>object</name><desc><p>The object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSOrderedSetRef</type><name>set</name></parsedparameter>
<parsedparameter><type>XSObjectRef</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSUInteger</returntype>
<result><p>The index of the object, or XSNotFound
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSUInteger</declaration_type> <declaration_function>XSOrderedSet_GetIndexOfObject</declaration_function>(
    <declaration_type>XSOrderedSetRef</declaration_type> <declaration_param>set</declaration_param>,
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_GetLastObject" lang="c"><name>XSOrderedSet_GetLastObject</name>
<abstract><p>Gets the last object in the ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSOrderedSetRef</type><name>set</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSObjectRef</returntype>
<result><p>The last object, or NULL if the ordered set is empty
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSObjectRef</declaration_type> <declaration_function>XSOrderedSet_GetLastObject</declaration_function>(
    <declaration_type>XSOrderedSetRef</declaration_type> <declaration_param>set</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_GetObjectAtIndex" lang="c"><name>XSOrderedSet_GetObjectAtIndex</name>
<abstract><p>Gets an object from an ordered set at a specific index
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
<parameter><name>index</name><desc><p>The index</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSOrderedSetRef</type><name>set</name></parsedparameter>
<parsedparameter><type>XSUInteger</type><name>index</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSObjectRef</returntype>
<result><p>The object, or NULL if the index does not exist
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSObjectRef</declaration_type> <declaration_function>XSOrderedSet_GetObjectAtIndex</declaration_function>(
    <declaration_type>XSOrderedSetRef</declaration_type> <declaration_param>set</declaration_param>,
    <declaration_type>XSUInteger</declaration_type> <declaration_param>index</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_InsertObjectAtIndex" lang="c"><name>XSOrderedSet_InsertObjectAtIndex</name>
<abstract><p>Inserts an object at a specific index in an ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
<parameter><name>index</name><desc><p>The index</p></desc></parameter>
<parameter><name>object</name><desc><p>The object (cannot be NULL)</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSMutableOrderedSetRef</type><name>set</name></parsedparameter>
<parsedparameter><type>XSUInteger</type><name>index</name></parsedparameter>
<parsedparameter><type>XSObjectRef</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT bool</returntype>
<result><p>True if the object was inserted, otherwise false
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>bool</declaration_type> <declaration_function>XSOrderedSet_InsertObjectAtIndex</declaration_function>(
    <declaration_type>XSMutableOrderedSetRef</declaration_type> <declaration_param>set</declaration_param>,
    <declaration_type>XSUInteger</declaration_type> <declaration_param>index</declaration_param>,
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_IsMutable" lang="c"><name>XSOrderedSet_IsMutable</name>
<abstract><p>Checks if an ordered set is mutable
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSOrderedSetRef</type><name>set</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT bool</returntype>
<result><p>True if the ordered set is mutable, otherwise false
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>bool</declaration_type> <declaration_function>XSOrderedSet_IsMutable</declaration_function>(
    <declaration_type>XSOrderedSetRef</declaration_type> <declaration_param>set</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_MutableOrderedSet" lang="c"><name>XSOrderedSet_MutableOrderedSet</name>
<abstract><p>Gets an empty mutable ordered set
</p></abstract>
<returntype> XS_EXPORT XSStatic XSAutoreleased XSMutableOrderedSetRef</returntype>
<result><p>An empty mutable ordered set
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSAutoreleased</declaration_type> <declaration_type>XSMutableOrderedSetRef</declaration_type> <declaration_function>XSOrderedSet_MutableOrderedSet</declaration_function>(
    <declaration_param>void</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_OrderedSet" lang="c"><name>XSOrderedSet_OrderedSet</name>
<abstract><p>Gets an empty ordered set
</p></abstract>
<returntype> XS_EXPORT XSStatic XSAutoreleased XSOrderedSetRef</returntype>
<result><p>An empty ordered set
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSAutoreleased</declaration_type> <declaration_type>XSOrderedSetRef</declaration_type> <declaration_function>XSOrderedSet_OrderedSet</declaration_function>(
    <declaration_param>void</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_OrderedSetWithArray" lang="c"><name>XSOrderedSet_OrderedSetWithArray</name>
<abstract><p>Gets an ordered set filled with objects contained in an array
</p></abstract>
<parameterlist>
<parameter><name>array</name><desc><p>The array with the objects to add</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSArrayRef</type><name>array</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSAutoreleased XSOrderedSetRef</returntype>
<result><p>An ordered set containing the objects contained in the array
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSAutoreleased</declaration_type> <declaration_type>XSOrderedSetRef</declaration_type> <declaration_function>XSOrderedSet_OrderedSetWithArray</declaration_function>(
    <declaration_type>XSArrayRef</declaration_type> <declaration_param>array</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_OrderedSetWithObjects" lang="c"><name>XSOrderedSet_OrderedSetWithObjects</name>
<abstract><p>Gets an ordered set filled with objects
</p></abstract>
<parameterlist>
<parameter><name>firstObject</name><desc><p>The first object to add</p></desc></parameter>
<parameter><name>...</name><desc><p>Additional objects to add, terminated by NULL</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>firstObject</name></parsedparameter>
<parsedparameter><type> ...</type><name>...</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSAutoreleased XSOrderedSetRef</returntype>
<result><p>An ordered set containing the specified objects
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSAutoreleased</declaration_type> <declaration_type>XSOrderedSetRef</declaration_type> <declaration_function>XSOrderedSet_OrderedSetWithObjects</declaration_function>(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>firstObject</declaration_param>,
    ... );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_OrderedSetWithOrderedSet" lang="c"><name>XSOrderedSet_OrderedSetWithOrderedSet</name>
<abstract><p>Gets an ordered set from another ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSOrderedSetRef</type><name>set</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSAutoreleased XSOrderedSetRef</returntype>
<result><p>An immutable ordered set based on the given ordered set
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSAutoreleased</declaration_type> <declaration_type>XSOrderedSetRef</declaration_type> <declaration_function>XSOrderedSet_OrderedSetWithOrderedSet</declaration_function>(
    <declaration_type>XSOrderedSetRef</declaration_type> <declaration_param>set</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_RemoveAllObjects" lang="c"><name>XSOrderedSet_RemoveAllObjects</name>
<abstract><p>Removes all objects from an ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSMutableOrderedSetRef</type><name>set</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSOrderedSet_RemoveAllObjects</declaration_function>(
    <declaration_type>XSMutableOrderedSetRef</declaration_type> <declaration_param>set</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_RemoveLastObject" lang="c"><name>XSOrderedSet_RemoveLastObject</name>
<abstract><p>Removes the last object in an ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSMutableOrderedSetRef</type><name>set</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSOrderedSet_RemoveLastObject</declaration_function>(
    <declaration_type>XSMutableOrderedSetRef</declaration_type> <declaration_param>set</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_RemoveObject" lang="c"><name>XSOrderedSet_RemoveObject</name>
<abstract><p>Removes a specific object in an ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
<parameter><name>object</name><desc><p>The object to remove</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSMutableOrderedSetRef</type><name>set</name></parsedparameter>
<parsedparameter><type>XSObjectRef</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSOrderedSet_RemoveObject</declaration_function>(
    <declaration_type>XSMutableOrderedSetRef</declaration_type> <declaration_param>set</declaration_param>,
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_RemoveObjectAtIndex" lang="c"><name>XSOrderedSet_RemoveObjectAtIndex</name>
<abstract><p>Removes the object at a specific index in an ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
<parameter><name>index</name><desc><p>The index</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSMutableOrderedSetRef</type><name>set</name></parsedparameter>
<parsedparameter><type>XSUInteger</type><name>index</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSOrderedSet_RemoveObjectAtIndex</declaration_function>(
    <declaration_type>XSMutableOrderedSetRef</declaration_type> <declaration_param>set</declaration_param>,
    <declaration_type>XSUInteger</declaration_type> <declaration_param>index</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_RemoveObjectsInArray" lang="c"><name>XSOrderedSet_RemoveObjectsInArray</name>
<abstract><p>Removes all occurences of the objects contained in an array from an ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
<parameter><name>objects</name><desc><p>The ordered set with the objects to remove</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSMutableOrderedSetRef</type><name>set</name></parsedparameter>
<parsedparameter><type>XSArrayRef</type><name>objects</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSOrderedSet_RemoveObjectsInArray</declaration_function>(
    <declaration_type>XSMutableOrderedSetRef</declaration_type> <declaration_param>set</declaration_param>,
    <declaration_type>XSArrayRef</declaration_type> <declaration_param>objects</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_RemoveObjectsInRange" lang="c"><name>XSOrderedSet_RemoveObjectsInRange</name>
<abstract><p>Removes objects at a specific range from an ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
<parameter><name>range</name><desc><p>The range</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSMutableOrderedSetRef</type><name>set</name></parsedparameter>
<parsedparameter><type>XSRange</type><name>range</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSOrderedSet_RemoveObjectsInRange</declaration_function>(
    <declaration_type>XSMutableOrderedSetRef</declaration_type> <declaration_param>set</declaration_param>,
    <declaration_type>XSRange</declaration_type> <declaration_param>range</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_ReplaceObjectAtIndex" lang="c"><name>XSOrderedSet_ReplaceObjectAtIndex</name>
<abstract><p>Replaces an object at a specific index in the ordered set
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
<parameter><name>index</name><desc><p>The index</p></desc></parameter>
<parameter><name>newObject</name><desc><p>The new object (cannot be NULL)</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSMutableOrderedSetRef</type><name>set</name></parsedparameter>
<parsedparameter><type>XSUInteger</type><name>index</name></parsedparameter>
<parsedparameter><type>XSObjectRef</type><name>newObject</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT bool</returntype>
<result><p>True if the object was replaced, otherwise false
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>bool</declaration_type> <declaration_function>XSOrderedSet_ReplaceObjectAtIndex</declaration_function>(
    <declaration_type>XSMutableOrderedSetRef</declaration_type> <declaration_param>set</declaration_param>,
    <declaration_type>XSUInteger</declaration_type> <declaration_param>index</declaration_param>,
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>newObject</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_SortWithFunction" lang="c"><name>XSOrderedSet_SortWithFunction</name>
<abstract><p>Sorts an ordered set using a function
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
<parameter><name>function</name><desc><p>The function used to sort the ordered set</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSMutableOrderedSetRef</type><name>set</name></parsedparameter>
<parsedparameter><type>XSOrderedSet_SortFunction</type><name>function</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSOrderedSet_SortFunction</name><value><hd_link logicalPath="XSOrderedSet_SortFunction" isseealso="yes">XSOrderedSet_SortFunction</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSOrderedSet_SortWithFunction</declaration_function>(
    <declaration_type>XSMutableOrderedSetRef</declaration_type> <declaration_param>set</declaration_param>,
    <declaration_type>XSOrderedSet_SortFunction</declaration_type> <declaration_param>function</declaration_param> );  </declaration>
<desc><p>The function will be called with each object contained in the ordered set
</p></desc>
</function><function id="//xsdoc_ref/c/func/XSOrderedSet_SortWithMethod" lang="c"><name>XSOrderedSet_SortWithMethod</name>
<abstract><p>Sorts an ordered set using a method
</p></abstract>
<parameterlist>
<parameter><name>set</name><desc><p>The ordered set</p></desc></parameter>
<parameter><name>object</name><desc><p>The object on which to call the method</p></desc></parameter>
<parameter><name>method</name><desc><p>The method used to sort the ordered set</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSMutableOrderedSetRef</type><name>set</name></parsedparameter>
<parsedparameter><type>XSObjectRef</type><name>object</name></parsedparameter>
<parsedparameter><type>XSOrderedSet_SortMethod</type><name>method</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSOrderedSet_SortFunction</name><value><hd_link logicalPath="XSOrderedSet_SortFunction" isseealso="yes">XSOrderedSet_SortFunction</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSOrderedSet_SortWithMethod</declaration_function>(
    <declaration_type>XSMutableOrderedSetRef</declaration_type> <declaration_param>set</declaration_param>,
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>object</declaration_param>,
    <declaration_type>XSOrderedSet_SortMethod</declaration_type> <declaration_param>method</declaration_param> );  </declaration>
<desc><p>The method will be called with each object contained in the ordered set
</p></desc>
</function></functions>
<typedefs><typedef id="//xsdoc_ref/c/tdef/XSMutableOrderedSetRef" lang="c" type="simple"><name>XSMutableOrderedSetRef</name>
<abstract><p>Opaque type for XSMutableOrderedSet
</p></abstract>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_keyword>struct</declaration_keyword> <declaration_type>__XSOrderedSet</declaration_type> <declaration_type>*</declaration_type> <declaration_var>XSMutableOrderedSetRef</declaration_var>;  </declaration>
<desc><p/></desc>
</typedef><typedef id="//xsdoc_ref/c/tdef/XSOrderedSet_ApplierFunction" lang="c" type="funcPtr"><name>XSOrderedSet_ApplierFunction</name>
<abstract><p>A function used to iterate objects in an ordered set
</p></abstract>
<parameterlist>
<parameter><name>value</name><desc><p>The ordered set's value</p></desc></parameter>
<parameter><name>index</name><desc><p>The index of the ordered set's value</p></desc></parameter>
<parameter><name>stop</name><desc><p>If true, stops the iteration</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>value</name></parsedparameter>
<parsedparameter><type>XSUInteger</type><name>index</name></parsedparameter>
<parsedparameter><type>bool *</type><name>stop</name></parsedparameter>
</parsedparameterlist>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_type>void</declaration_type> ( <declaration_type>*</declaration_type><declaration_function>XSOrderedSet_ApplierFunction</declaration_function> )(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>value</declaration_param>,
    <declaration_type>XSUInteger</declaration_type> <declaration_param>index</declaration_param>,
    <declaration_type>bool</declaration_type> <declaration_type>*</declaration_type><declaration_param>stop</declaration_param> );  </declaration>
<desc><p/></desc>
</typedef><typedef id="//xsdoc_ref/c/tdef/XSOrderedSet_ApplierMethod" lang="c" type="funcPtr"><name>XSOrderedSet_ApplierMethod</name>
<abstract><p>A method used to iterate objects in an ordered set
</p></abstract>
<parameterlist>
<parameter><name>object</name><desc><p>The receiver object</p></desc></parameter>
<parameter><name>value</name><desc><p>The ordered set's value</p></desc></parameter>
<parameter><name>index</name><desc><p>The index of the ordered set's value</p></desc></parameter>
<parameter><name>stop</name><desc><p>If true, stops the iteration</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>object</name></parsedparameter>
<parsedparameter><type>XSObjectRef</type><name>value</name></parsedparameter>
<parsedparameter><type>XSUInteger</type><name>index</name></parsedparameter>
<parsedparameter><type>bool *</type><name>stop</name></parsedparameter>
</parsedparameterlist>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_type>void</declaration_type> ( <declaration_type>*</declaration_type><declaration_function>XSOrderedSet_ApplierMethod</declaration_function> )(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>object</declaration_param>,
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>value</declaration_param>,
    <declaration_type>XSUInteger</declaration_type> <declaration_param>index</declaration_param>,
    <declaration_type>bool</declaration_type> <declaration_type>*</declaration_type><declaration_param>stop</declaration_param> );  </declaration>
<desc><p/></desc>
</typedef><typedef id="//xsdoc_ref/c/tdef/XSOrderedSet_FilterFunction" lang="c" type="funcPtr"><name>XSOrderedSet_FilterFunction</name>
<abstract><p>A function used to filter objects in an ordered set
</p></abstract>
<parameterlist>
<parameter><name>value</name><desc><p>The ordered set's value</p></desc></parameter>
<parameter><name>index</name><desc><p>The index of the ordered set's value</p></desc></parameter>
<parameter><name>stop</name><desc><p>If true, stops the iteration</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>value</name></parsedparameter>
<parsedparameter><type>XSUInteger</type><name>index</name></parsedparameter>
<parsedparameter><type>bool *</type><name>stop</name></parsedparameter>
</parsedparameterlist>
<result><p>True if the object must be kept in the ordered set, otherwise false
</p></result>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_type>bool</declaration_type> ( <declaration_type>*</declaration_type><declaration_function>XSOrderedSet_FilterFunction</declaration_function> )(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>value</declaration_param>,
    <declaration_type>XSUInteger</declaration_type> <declaration_param>index</declaration_param>,
    <declaration_type>bool</declaration_type> <declaration_type>*</declaration_type><declaration_param>stop</declaration_param> );  </declaration>
<desc><p/></desc>
</typedef><typedef id="//xsdoc_ref/c/tdef/XSOrderedSet_FilterMethod" lang="c" type="funcPtr"><name>XSOrderedSet_FilterMethod</name>
<abstract><p>A method used to filter objects in an ordered set
</p></abstract>
<parameterlist>
<parameter><name>object</name><desc><p>The receiver object</p></desc></parameter>
<parameter><name>value</name><desc><p>The ordered set's value</p></desc></parameter>
<parameter><name>index</name><desc><p>The index of the ordered set's value</p></desc></parameter>
<parameter><name>stop</name><desc><p>If true, stops the iteration</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>object</name></parsedparameter>
<parsedparameter><type>XSObjectRef</type><name>value</name></parsedparameter>
<parsedparameter><type>XSUInteger</type><name>index</name></parsedparameter>
<parsedparameter><type>bool *</type><name>stop</name></parsedparameter>
</parsedparameterlist>
<result><p>True if the object must be kept in the ordered set, otherwise false
</p></result>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_type>bool</declaration_type> ( <declaration_type>*</declaration_type><declaration_function>XSOrderedSet_FilterMethod</declaration_function> )(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>object</declaration_param>,
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>value</declaration_param>,
    <declaration_type>XSUInteger</declaration_type> <declaration_param>index</declaration_param>,
    <declaration_type>bool</declaration_type> <declaration_type>*</declaration_type><declaration_param>stop</declaration_param> );  </declaration>
<desc><p/></desc>
</typedef><typedef id="//xsdoc_ref/c/tdef/XSOrderedSet_SortFunction" lang="c" type="funcPtr"><name>XSOrderedSet_SortFunction</name>
<abstract><p>A function used to sort objects in an ordered set
</p></abstract>
<parameterlist>
<parameter><name>value1</name><desc><p>An ordered set's value</p></desc></parameter>
<parameter><name>value2</name><desc><p>An ordered set's value</p></desc></parameter>
<parameter><name>stop</name><desc><p>If true, stops the iteration</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>value1</name></parsedparameter>
<parsedparameter><type>XSObjectRef</type><name>value2</name></parsedparameter>
<parsedparameter><type>bool *</type><name>stop</name></parsedparameter>
</parsedparameterlist>
<result><p>The comparison result between the two values
</p></result>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_type>XSComparisonResult</declaration_type> ( <declaration_type>*</declaration_type><declaration_function>XSOrderedSet_SortFunction</declaration_function> )(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>value1</declaration_param>,
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>value2</declaration_param>,
    <declaration_type>bool</declaration_type> <declaration_type>*</declaration_type><declaration_param>stop</declaration_param> );  </declaration>
<desc><p/></desc>
</typedef><typedef id="//xsdoc_ref/c/tdef/XSOrderedSet_SortMethod" lang="c" type="funcPtr"><name>XSOrderedSet_SortMethod</name>
<abstract><p>A method used to sort objects in an ordered set
</p></abstract>
<parameterlist>
<parameter><name>object</name><desc><p>The receiver object</p></desc></parameter>
<parameter><name>value1</name><desc><p>An ordered set's value</p></desc></parameter>
<parameter><name>value2</name><desc><p>An ordered set's value</p></desc></parameter>
<parameter><name>stop</name><desc><p>If true, stops the iteration</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>object</name></parsedparameter>
<parsedparameter><type>XSObjectRef</type><name>value1</name></parsedparameter>
<parsedparameter><type>XSObjectRef</type><name>value2</name></parsedparameter>
<parsedparameter><type>bool *</type><name>stop</name></parsedparameter>
</parsedparameterlist>
<result><p>The comparison result between the two values
</p></result>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_type>XSComparisonResult</declaration_type> ( <declaration_type>*</declaration_type><declaration_function>XSOrderedSet_SortMethod</declaration_function> )(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>object</declaration_param>,
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>value1</declaration_param>,
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>value2</declaration_param>,
    <declaration_type>bool</declaration_type> <declaration_type>*</declaration_type><declaration_param>stop</declaration_param> );  </declaration>
<desc><p/></desc>
</typedef><typedef id="//xsdoc_ref/c/tdef/XSOrderedSetRef" lang="c" type="simple"><name>XSOrderedSetRef</name>
<abstract><p>Opaque type for XSOrderedSet
</p></abstract>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_keyword>const</declaration_keyword> <declaration_keyword>struct</declaration_keyword> <declaration_type>__XSOrderedSet</declaration_type> <declaration_type>*</declaration_type> <declaration_var>XSOrderedSetRef</declaration_var>;  </declaration>
<desc><p/></desc>
</typedef></typedefs><copyrightinfo>&#169; (c) 2010-2014 - Jean-David Gadina - www.xs-labs.com
</copyrightinfo>
<timestamp>Thursday, September 04, 2014</timestamp>
</header>