<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE header PUBLIC "-//Apple Computer//DTD HEADERDOC 1.6//EN" "/System/Library/DTDs/HeaderDoc-1.6.dtd">
<header id="//xsdoc_ref/doc/header/XSXMLParserRef.h" lang="c" filename="XSXMLParserRef.h" headerpath="/Users/macmade/Documents/Macmade/Development/GitHub/XSFoundation/XSFoundation/include/XS/Classes/XSXMLParserRef.h"><name>XSXMLParserRef.h</name>
<abstract><p>XSXMLParser class
</p></abstract>
<attributes><attribute><name>Author</name><value>Jean-David Gadina - www.xs-labs.com</value></attribute>
</attributes>
<includes>
<include><hd_link logicalPath="//xsdoc_ref/doc/header/XSTypes.h">&lt;XS/XSTypes.h&gt;</hd_link></include>
<include><hd_link logicalPath="//xsdoc_ref/doc/header/XSMacros.h">&lt;XS/XSMacros.h&gt;</hd_link></include>
</includes>
<desc><p>...
</p></desc>
<functions><function id="//xsdoc_ref/c/func/XSXMLParser_AbortParsing" lang="c"><name>XSXMLParser_AbortParsing</name>
<abstract><p>Aborts parsing the XML data
</p></abstract>
<parameterlist>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSXMLParser_AbortParsing</declaration_function>(
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSXMLParser_CreateWithData" lang="c"><name>XSXMLParser_CreateWithData</name>
<abstract><p>Creates an XML parser object with specific data
</p></abstract>
<parameterlist>
<parameter><name>data</name><desc><p>The XML data</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSDataRef</type><name>data</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSXMLParserRef</returntype>
<result><p>The XML parser object
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSXMLParserRef</declaration_type> <declaration_function>XSXMLParser_CreateWithData</declaration_function>(
    <declaration_type>XSDataRef</declaration_type> <declaration_param>data</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSXMLParser_GetClassID" lang="c"><name>XSXMLParser_GetClassID</name>
<abstract><p>Gets the class ID for XSXMLParser
</p></abstract>
<returntype> XS_EXPORT XSStatic XSClassID</returntype>
<result><p>The class ID for XSXMLParser
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSClassID</declaration_type> <declaration_function>XSXMLParser_GetClassID</declaration_function>(
    <declaration_param>void</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSXMLParser_GetCurrentColumnNumber" lang="c"><name>XSXMLParser_GetCurrentColumnNumber</name>
<abstract><p>Gets the current column number beeing parsed
</p></abstract>
<parameterlist>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSUInteger</returntype>
<result><p>The column number beeing parsed
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSUInteger</declaration_type> <declaration_function>XSXMLParser_GetCurrentColumnNumber</declaration_function>(
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSXMLParser_GetCurrentLineNumber" lang="c"><name>XSXMLParser_GetCurrentLineNumber</name>
<abstract><p>Gets the current line number beeing parsed
</p></abstract>
<parameterlist>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSUInteger</returntype>
<result><p>The line number beeing parsed
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSUInteger</declaration_type> <declaration_function>XSXMLParser_GetCurrentLineNumber</declaration_function>(
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSXMLParser_GetParserError" lang="c"><name>XSXMLParser_GetParserError</name>
<abstract><p>Gets the current parse error, if any
</p></abstract>
<parameterlist>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSErrorRef</returntype>
<result><p>The error object for the parse error
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSErrorRef</declaration_type> <declaration_function>XSXMLParser_GetParserError</declaration_function>(
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSXMLParser_Parse" lang="c"><name>XSXMLParser_Parse</name>
<abstract><p>Parses the XML data
</p></abstract>
<parameterlist>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT bool</returntype>
<result><p>True if the parsing was sucessfull, otherwise false
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>bool</declaration_type> <declaration_function>XSXMLParser_Parse</declaration_function>(
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSXMLParser_SetCDataHandler" lang="c"><name>XSXMLParser_SetCDataHandler</name>
<abstract><p>Sets the CData handler method
</p></abstract>
<parameterlist>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>method</name><desc><p>The method</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSXMLParser_CDataHandlerMethod</type><name>method</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSXMLParser_CDataHandlerMethod</name><value><hd_link logicalPath="XSXMLParser_CDataHandlerMethod" isseealso="yes">XSXMLParser_CDataHandlerMethod</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSXMLParser_SetCDataHandler</declaration_function>(
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSXMLParser_CDataHandlerMethod</declaration_type> <declaration_param>method</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSXMLParser_SetCharacterHandler" lang="c"><name>XSXMLParser_SetCharacterHandler</name>
<abstract><p>Sets the character handler method
</p></abstract>
<parameterlist>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>method</name><desc><p>The method</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSXMLParser_CharacterHandlerMethod</type><name>method</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSXMLParser_CharacterHandlerMethod</name><value><hd_link logicalPath="XSXMLParser_CharacterHandlerMethod" isseealso="yes">XSXMLParser_CharacterHandlerMethod</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSXMLParser_SetCharacterHandler</declaration_function>(
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSXMLParser_CharacterHandlerMethod</declaration_type> <declaration_param>method</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSXMLParser_SetCommentHandler" lang="c"><name>XSXMLParser_SetCommentHandler</name>
<abstract><p>Sets the comment handler method
</p></abstract>
<parameterlist>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>method</name><desc><p>The method</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSXMLParser_CommentHandlerMethod</type><name>method</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSXMLParser_CommentHandlerMethod</name><value><hd_link logicalPath="XSXMLParser_CommentHandlerMethod" isseealso="yes">XSXMLParser_CommentHandlerMethod</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSXMLParser_SetCommentHandler</declaration_function>(
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSXMLParser_CommentHandlerMethod</declaration_type> <declaration_param>method</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSXMLParser_SetDocumentEndHandler" lang="c"><name>XSXMLParser_SetDocumentEndHandler</name>
<abstract><p>Sets the document end handler method
</p></abstract>
<parameterlist>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>method</name><desc><p>The method</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSXMLParser_DocumentEndHandlerMethod</type><name>method</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSXMLParser_DocumentEndHandlerMethod</name><value><hd_link logicalPath="XSXMLParser_DocumentEndHandlerMethod" isseealso="yes">XSXMLParser_DocumentEndHandlerMethod</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSXMLParser_SetDocumentEndHandler</declaration_function>(
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSXMLParser_DocumentEndHandlerMethod</declaration_type> <declaration_param>method</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSXMLParser_SetDocumentStartHandler" lang="c"><name>XSXMLParser_SetDocumentStartHandler</name>
<abstract><p>Sets the document start handler method
</p></abstract>
<parameterlist>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>method</name><desc><p>The method</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSXMLParser_DocumentStartHandlerMethod</type><name>method</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSXMLParser_DocumentStartHandlerMethod</name><value><hd_link logicalPath="XSXMLParser_DocumentStartHandlerMethod" isseealso="yes">XSXMLParser_DocumentStartHandlerMethod</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSXMLParser_SetDocumentStartHandler</declaration_function>(
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSXMLParser_DocumentStartHandlerMethod</declaration_type> <declaration_param>method</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSXMLParser_SetElementEndHandler" lang="c"><name>XSXMLParser_SetElementEndHandler</name>
<abstract><p>Sets the element end handler method
</p></abstract>
<parameterlist>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>method</name><desc><p>The method</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSXMLParser_ElementEndHandlerMethod</type><name>method</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSXMLParser_ElementEndHandlerMethod</name><value><hd_link logicalPath="XSXMLParser_ElementEndHandlerMethod" isseealso="yes">XSXMLParser_ElementEndHandlerMethod</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSXMLParser_SetElementEndHandler</declaration_function>(
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSXMLParser_ElementEndHandlerMethod</declaration_type> <declaration_param>method</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSXMLParser_SetElementStartHandler" lang="c"><name>XSXMLParser_SetElementStartHandler</name>
<abstract><p>Sets the element start handler method
</p></abstract>
<parameterlist>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>method</name><desc><p>The method</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSXMLParser_ElementStartHandlerMethod</type><name>method</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSXMLParser_ElementStartHandlerMethod</name><value><hd_link logicalPath="XSXMLParser_ElementStartHandlerMethod" isseealso="yes">XSXMLParser_ElementStartHandlerMethod</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSXMLParser_SetElementStartHandler</declaration_function>(
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSXMLParser_ElementStartHandlerMethod</declaration_type> <declaration_param>method</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSXMLParser_SetErrorHandler" lang="c"><name>XSXMLParser_SetErrorHandler</name>
<abstract><p>Sets the error handler method
</p></abstract>
<parameterlist>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>method</name><desc><p>The method</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSXMLParser_ErrorHandlerMethod</type><name>method</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSXMLParser_ErrorHandlerMethod</name><value><hd_link logicalPath="XSXMLParser_ErrorHandlerMethod" isseealso="yes">XSXMLParser_ErrorHandlerMethod</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSXMLParser_SetErrorHandler</declaration_function>(
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSXMLParser_ErrorHandlerMethod</declaration_type> <declaration_param>method</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSXMLParser_SetHandlerObject" lang="c"><name>XSXMLParser_SetHandlerObject</name>
<abstract><p>Sets the handler object for XML parsing callbacks
</p></abstract>
<parameterlist>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>handler</name><desc><p>The handler object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSObjectRef</type><name>handler</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSXMLParser_SetHandlerObject</declaration_function>(
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>handler</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSXMLParser_SetProcessingInstructionHandler" lang="c"><name>XSXMLParser_SetProcessingInstructionHandler</name>
<abstract><p>Sets the processing instruction handler method callback
</p></abstract>
<parameterlist>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>method</name><desc><p>The method callback</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSXMLParser_ProcessingInstructionHandlerMethod</type><name>method</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSXMLParser_ProcessingInstructionHandlerMethod</name><value><hd_link logicalPath="XSXMLParser_ProcessingInstructionHandlerMethod" isseealso="yes">XSXMLParser_ProcessingInstructionHandlerMethod</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSXMLParser_SetProcessingInstructionHandler</declaration_function>(
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSXMLParser_ProcessingInstructionHandlerMethod</declaration_type> <declaration_param>method</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSXMLParser_SetWhitespaceHandler" lang="c"><name>XSXMLParser_SetWhitespaceHandler</name>
<abstract><p>Sets the whitespace handler method
</p></abstract>
<parameterlist>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>method</name><desc><p>The method</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSXMLParser_WhitespaceHandlerMethod</type><name>method</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSXMLParser_WhitespaceHandlerMethod</name><value><hd_link logicalPath="XSXMLParser_WhitespaceHandlerMethod" isseealso="yes">XSXMLParser_WhitespaceHandlerMethod</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSXMLParser_SetWhitespaceHandler</declaration_function>(
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSXMLParser_WhitespaceHandlerMethod</declaration_type> <declaration_param>method</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSXMLParser_XMLParserWithData" lang="c"><name>XSXMLParser_XMLParserWithData</name>
<abstract><p>Gets an XML parser object with specific data
</p></abstract>
<parameterlist>
<parameter><name>data</name><desc><p>The XML data</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSDataRef</type><name>data</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSAutoreleased XSXMLParserRef</returntype>
<result><p>The XML parser object
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSAutoreleased</declaration_type> <declaration_type>XSXMLParserRef</declaration_type> <declaration_function>XSXMLParser_XMLParserWithData</declaration_function>(
    <declaration_type>XSDataRef</declaration_type> <declaration_param>data</declaration_param> );  </declaration>
<desc><p/></desc>
</function></functions>
<typedefs><typedef id="//xsdoc_ref/c/tdef/XSXMLParser_CDataHandlerMethod" lang="c" type="funcPtr"><name>XSXMLParser_CDataHandlerMethod</name>
<abstract><p>XSXMLParser CData handler method
</p></abstract>
<parameterlist>
<parameter><name>handler</name><desc><p>The handler object (receiver)</p></desc></parameter>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>cData</name><desc><p>The bytes of the CData section</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>handler</name></parsedparameter>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSDataRef</type><name>cData</name></parsedparameter>
</parsedparameterlist>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_type>void</declaration_type> ( <declaration_type>*</declaration_type><declaration_function>XSXMLParser_CDataHandlerMethod</declaration_function> )(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>handler</declaration_param>,
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSDataRef</declaration_type> <declaration_param>cData</declaration_param> );  </declaration>
<desc><p/></desc>
</typedef><typedef id="//xsdoc_ref/c/tdef/XSXMLParser_CharacterHandlerMethod" lang="c" type="funcPtr"><name>XSXMLParser_CharacterHandlerMethod</name>
<abstract><p>XSXMLParser character handler method
</p></abstract>
<parameterlist>
<parameter><name>handler</name><desc><p>The handler object (receiver)</p></desc></parameter>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>characters</name><desc><p>The characters</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>handler</name></parsedparameter>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSStringRef</type><name>characters</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>XSXMLParser_ErrorHandlerMethod</name><value><hd_link logicalPath="//xsdoc_ref/doc/title:tdef/XSXMLParser_ErrorHandlerMethod" isseealso="yes">XSXMLParser_ErrorHandlerMethod</hd_link></value></item></list></listattribute>
</attributelists>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_type>void</declaration_type> ( <declaration_type>*</declaration_type><declaration_function>XSXMLParser_CharacterHandlerMethod</declaration_function> )(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>handler</declaration_param>,
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSStringRef</declaration_type> <declaration_param>characters</declaration_param> );  </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/doc/title:tdef/XSXMLParser_ErrorHandlerMethod</relateduid>
</autorelated>
</typedef><typedef id="//xsdoc_ref/c/tdef/XSXMLParser_CommentHandlerMethod" lang="c" type="funcPtr"><name>XSXMLParser_CommentHandlerMethod</name>
<abstract><p>XSXMLParser comment handler method
</p></abstract>
<parameterlist>
<parameter><name>handler</name><desc><p>The handler object (receiver)</p></desc></parameter>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>comment</name><desc><p>The comment characters</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>handler</name></parsedparameter>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSStringRef</type><name>comment</name></parsedparameter>
</parsedparameterlist>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_type>void</declaration_type> ( <declaration_type>*</declaration_type><declaration_function>XSXMLParser_CommentHandlerMethod</declaration_function> )(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>handler</declaration_param>,
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSStringRef</declaration_type> <declaration_param>comment</declaration_param> );  </declaration>
<desc><p/></desc>
</typedef><typedef id="//xsdoc_ref/c/tdef/XSXMLParser_DocumentEndHandlerMethod" lang="c" type="funcPtr"><name>XSXMLParser_DocumentEndHandlerMethod</name>
<abstract><p>XSXMLParser document end handler method
</p></abstract>
<parameterlist>
<parameter><name>handler</name><desc><p>The handler object (receiver)</p></desc></parameter>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>handler</name></parsedparameter>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
</parsedparameterlist>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_type>void</declaration_type> ( <declaration_type>*</declaration_type><declaration_function>XSXMLParser_DocumentEndHandlerMethod</declaration_function> )(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>handler</declaration_param>,
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param> );  </declaration>
<desc><p/></desc>
</typedef><typedef id="//xsdoc_ref/c/tdef/XSXMLParser_DocumentStartHandlerMethod" lang="c" type="funcPtr"><name>XSXMLParser_DocumentStartHandlerMethod</name>
<abstract><p>XSXMLParser document start handler method
</p></abstract>
<parameterlist>
<parameter><name>handler</name><desc><p>The handler object (receiver)</p></desc></parameter>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>handler</name></parsedparameter>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
</parsedparameterlist>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_type>void</declaration_type> ( <declaration_type>*</declaration_type><declaration_function>XSXMLParser_DocumentStartHandlerMethod</declaration_function> )(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>handler</declaration_param>,
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param> );  </declaration>
<desc><p/></desc>
</typedef><typedef id="//xsdoc_ref/c/tdef/XSXMLParser_ElementEndHandlerMethod" lang="c" type="funcPtr"><name>XSXMLParser_ElementEndHandlerMethod</name>
<abstract><p>XSXMLParser element end handler method
</p></abstract>
<parameterlist>
<parameter><name>handler</name><desc><p>The handler object (receiver)</p></desc></parameter>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>e</name><desc><p>The element's name</p></desc></parameter>
<parameter><name>ns</name><desc><p>The element's namespace (may be NULL)</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>handler</name></parsedparameter>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSStringRef</type><name>e</name></parsedparameter>
<parsedparameter><type>XSStringRef</type><name>ns</name></parsedparameter>
</parsedparameterlist>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_type>void</declaration_type> ( <declaration_type>*</declaration_type><declaration_function>XSXMLParser_ElementEndHandlerMethod</declaration_function> )(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>handler</declaration_param>,
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSStringRef</declaration_type> <declaration_param>e</declaration_param>,
    <declaration_type>XSStringRef</declaration_type> <declaration_param>ns</declaration_param> );  </declaration>
<desc><p/></desc>
</typedef><typedef id="//xsdoc_ref/c/tdef/XSXMLParser_ElementStartHandlerMethod" lang="c" type="funcPtr"><name>XSXMLParser_ElementStartHandlerMethod</name>
<abstract><p>XSXMLParser element start handler method
</p></abstract>
<parameterlist>
<parameter><name>handler</name><desc><p>The handler object (receiver)</p></desc></parameter>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>e</name><desc><p>The element's name</p></desc></parameter>
<parameter><name>ns</name><desc><p>The element's namespace (may be NULL)</p></desc></parameter>
<parameter><name>attributes</name><desc><p>The element's attributes (may be NULL)</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>handler</name></parsedparameter>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSStringRef</type><name>e</name></parsedparameter>
<parsedparameter><type>XSStringRef</type><name>ns</name></parsedparameter>
<parsedparameter><type>XSDictionaryRef</type><name>attributes</name></parsedparameter>
</parsedparameterlist>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_type>void</declaration_type> ( <declaration_type>*</declaration_type><declaration_function>XSXMLParser_ElementStartHandlerMethod</declaration_function> )(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>handler</declaration_param>,
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSStringRef</declaration_type> <declaration_param>e</declaration_param>,
    <declaration_type>XSStringRef</declaration_type> <declaration_param>ns</declaration_param>,
    <declaration_type>XSDictionaryRef</declaration_type> <declaration_param>attributes</declaration_param> );  </declaration>
<desc><p/></desc>
</typedef><typedef id="//xsdoc_ref/c/tdef/XSXMLParser_ErrorHandlerMethod" lang="c" type="funcPtr"><name>XSXMLParser_ErrorHandlerMethod</name>
<abstract><p>XSXMLParser error handler method
</p></abstract>
<parameterlist>
<parameter><name>handler</name><desc><p>The handler object (receiver)</p></desc></parameter>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>error</name><desc><p>The error object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>handler</name></parsedparameter>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSErrorRef</type><name>error</name></parsedparameter>
</parsedparameterlist>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_type>void</declaration_type> ( <declaration_type>*</declaration_type><declaration_function>XSXMLParser_ErrorHandlerMethod</declaration_function> )(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>handler</declaration_param>,
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSErrorRef</declaration_type> <declaration_param>error</declaration_param> );  </declaration>
<desc><p/></desc>
</typedef><typedef id="//xsdoc_ref/doc/title:tdef/XSXMLParser_ErrorHandlerMethod" lang="c" type="funcPtr"><name>XSXMLParser_ErrorHandlerMethod</name>
<abstract><p>XSXMLParser character handler method
</p></abstract>
<parameterlist>
<parameter><name>handler</name><desc><p>The handler object (receiver)</p></desc></parameter>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>characters</name><desc><p>The characters</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>handler</name></parsedparameter>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSStringRef</type><name>characters</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See Also</name><list>
<item><name>XSXMLParser_CharacterHandlerMethod</name><value><hd_link logicalPath="//xsdoc_ref/c/tdef/XSXMLParser_CharacterHandlerMethod" isseealso="yes">XSXMLParser_CharacterHandlerMethod</hd_link></value></item></list></listattribute>
</attributelists>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_type>void</declaration_type> ( <declaration_type>*</declaration_type><declaration_function>XSXMLParser_CharacterHandlerMethod</declaration_function> )(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>handler</declaration_param>,
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSStringRef</declaration_type> <declaration_param>characters</declaration_param> );  </declaration>
<desc><p/></desc>
<autorelated>
<relateduid>//xsdoc_ref/c/tdef/XSXMLParser_CharacterHandlerMethod</relateduid>
</autorelated>
</typedef><typedef id="//xsdoc_ref/c/tdef/XSXMLParser_ProcessingInstructionHandlerMethod" lang="c" type="funcPtr"><name>XSXMLParser_ProcessingInstructionHandlerMethod</name>
<abstract><p>XSXMLParser processing instruction handler method
</p></abstract>
<parameterlist>
<parameter><name>handler</name><desc><p>The handler object (receiver)</p></desc></parameter>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>target</name><desc><p>The processing instruction target</p></desc></parameter>
<parameter><name>data</name><desc><p>The processing instruction data</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>handler</name></parsedparameter>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSStringRef</type><name>target</name></parsedparameter>
<parsedparameter><type>XSDataRef</type><name>data</name></parsedparameter>
</parsedparameterlist>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_type>void</declaration_type> ( <declaration_type>*</declaration_type><declaration_function>XSXMLParser_ProcessingInstructionHandlerMethod</declaration_function> )(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>handler</declaration_param>,
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSStringRef</declaration_type> <declaration_param>target</declaration_param>,
    <declaration_type>XSDataRef</declaration_type> <declaration_param>data</declaration_param> );  </declaration>
<desc><p/></desc>
</typedef><typedef id="//xsdoc_ref/c/tdef/XSXMLParser_WhitespaceHandlerMethod" lang="c" type="funcPtr"><name>XSXMLParser_WhitespaceHandlerMethod</name>
<abstract><p>XSXMLParser whitespace handler method
</p></abstract>
<parameterlist>
<parameter><name>handler</name><desc><p>The handler object (receiver)</p></desc></parameter>
<parameter><name>parser</name><desc><p>The XML parser object</p></desc></parameter>
<parameter><name>whitespace</name><desc><p>The whitespace characters</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>handler</name></parsedparameter>
<parsedparameter><type>XSXMLParserRef</type><name>parser</name></parsedparameter>
<parsedparameter><type>XSStringRef</type><name>whitespace</name></parsedparameter>
</parsedparameterlist>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_type>void</declaration_type> ( <declaration_type>*</declaration_type><declaration_function>XSXMLParser_WhitespaceHandlerMethod</declaration_function> )(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>handler</declaration_param>,
    <declaration_type>XSXMLParserRef</declaration_type> <declaration_param>parser</declaration_param>,
    <declaration_type>XSStringRef</declaration_type> <declaration_param>whitespace</declaration_param> );  </declaration>
<desc><p/></desc>
</typedef><typedef id="//xsdoc_ref/c/tdef/XSXMLParserRef" lang="c" type="simple"><name>XSXMLParserRef</name>
<abstract><p>Opaque type for XSXMLParser
</p></abstract>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_keyword>const</declaration_keyword> <declaration_keyword>struct</declaration_keyword> <declaration_type>__XSXMLParser</declaration_type> <declaration_type>*</declaration_type> <declaration_var>XSXMLParserRef</declaration_var>;  </declaration>
<desc><p/></desc>
</typedef></typedefs><copyrightinfo>&#169; (c) 2010-2014 - Jean-David Gadina - www.xs-labs.com
</copyrightinfo>
<timestamp>Thursday, September 04, 2014</timestamp>
</header>