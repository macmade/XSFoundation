<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE header PUBLIC "-//Apple Computer//DTD HEADERDOC 1.6//EN" "/System/Library/DTDs/HeaderDoc-1.6.dtd">
<header id="//xsdoc_ref/doc/header/XSRecursiveLockRef.h" lang="c" filename="XSRecursiveLockRef.h" headerpath="/Users/macmade/Documents/Macmade/Development/GitHub/XSFoundation/XSFoundation/include/XS/Classes/XSRecursiveLockRef.h"><name>XSRecursiveLockRef.h</name>
<abstract><p>XSRecursiveLock class
</p></abstract>
<attributes><attribute><name>Author</name><value>Jean-David Gadina - www.xs-labs.com</value></attribute>
</attributes>
<includes>
<include><hd_link logicalPath="//xsdoc_ref/doc/header/XSTypes.h">&lt;XS/XSTypes.h&gt;</hd_link></include>
<include><hd_link logicalPath="//xsdoc_ref/doc/header/XSMacros.h">&lt;XS/XSMacros.h&gt;</hd_link></include>
</includes>
<desc><p>...
</p></desc>
<functions><function id="//xsdoc_ref/c/func/XSRecursiveLock_Create" lang="c"><name>XSRecursiveLock_Create</name>
<abstract><p>Creates a recursive lock object
</p></abstract>
<returntype> XS_EXPORT XSStatic XSRecursiveLockRef</returntype>
<result><p>The recursive lock object
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSRecursiveLockRef</declaration_type> <declaration_function>XSRecursiveLock_Create</declaration_function>(
    <declaration_param>void</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRecursiveLock_GetClassID" lang="c"><name>XSRecursiveLock_GetClassID</name>
<abstract><p>Gets the class ID for XSRecursiveLock
</p></abstract>
<returntype> XS_EXPORT XSStatic XSClassID</returntype>
<result><p>The class ID for XSRecursiveLock
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSClassID</declaration_type> <declaration_function>XSRecursiveLock_GetClassID</declaration_function>(
    <declaration_param>void</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRecursiveLock_Lock" lang="c"><name>XSRecursiveLock_Lock</name>
<abstract><p>Locks a recursive lock object
</p></abstract>
<parameterlist>
<parameter><name>lock</name><desc><p>The recursive lock object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRecursiveLockRef</type><name>lock</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSRecursiveLock_Lock</declaration_function>(
    <declaration_type>XSRecursiveLockRef</declaration_type> <declaration_param>lock</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRecursiveLock_TryLock" lang="c"><name>XSRecursiveLock_TryLock</name>
<abstract><p>Tries to lock a recursive lock object
</p></abstract>
<parameterlist>
<parameter><name>lock</name><desc><p>The recursive lock object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRecursiveLockRef</type><name>lock</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT bool</returntype>
<result><p>True if the lock was acquired, otherwise false
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>bool</declaration_type> <declaration_function>XSRecursiveLock_TryLock</declaration_function>(
    <declaration_type>XSRecursiveLockRef</declaration_type> <declaration_param>lock</declaration_param> );  </declaration>
<desc><p>If the recursive lock can't be qcquired, this function will
return immediately, rather than waiting.
</p></desc>
</function><function id="//xsdoc_ref/c/func/XSRecursiveLock_Unlock" lang="c"><name>XSRecursiveLock_Unlock</name>
<abstract><p>Unlocks a recursive lock object
</p></abstract>
<parameterlist>
<parameter><name>lock</name><desc><p>The recursive lock object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRecursiveLockRef</type><name>lock</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSRecursiveLock_Unlock</declaration_function>(
    <declaration_type>XSRecursiveLockRef</declaration_type> <declaration_param>lock</declaration_param> );  </declaration>
<desc><p/></desc>
</function></functions>
<typedefs><typedef id="//xsdoc_ref/c/tdef/XSRecursiveLockRef" lang="c" type="simple"><name>XSRecursiveLockRef</name>
<abstract><p>Opaque type for XSRecursiveLock
</p></abstract>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_keyword>struct</declaration_keyword> <declaration_type>__XSRecursiveLock</declaration_type> <declaration_type>*</declaration_type> <declaration_var>XSRecursiveLockRef</declaration_var>;  </declaration>
<desc><p/></desc>
</typedef></typedefs><copyrightinfo>&#169; (c) 2010-2014 - Jean-David Gadina - www.xs-labs.com
</copyrightinfo>
<timestamp>Thursday, September 04, 2014</timestamp>
</header>