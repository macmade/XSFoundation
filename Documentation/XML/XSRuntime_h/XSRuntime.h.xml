<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE header PUBLIC "-//Apple Computer//DTD HEADERDOC 1.6//EN" "/System/Library/DTDs/HeaderDoc-1.6.dtd">
<header id="//xsdoc_ref/doc/header/XSRuntime.h" lang="c" filename="XSRuntime.h" headerpath="/Users/macmade/Documents/Macmade/Development/GitHub/XSFoundation/XSFoundation/include/XS/Functions/XSRuntime.h"><name>XSRuntime.h</name>
<abstract><p>XSFoundation runtime functions
</p></abstract>
<attributes><attribute><name>Author</name><value>Jean-David Gadina - www.xs-labs.com</value></attribute>
</attributes>
<includes>
<include><hd_link logicalPath="//xsdoc_ref/doc/header/XSTypes.h">&lt;XS/XSTypes.h&gt;</hd_link></include>
</includes>
<desc><p>...
</p></desc>
<functions><function id="//xsdoc_ref/c/func/XSRuntime_CreateInstance" lang="c"><name>XSRuntime_CreateInstance</name>
<abstract><p>Initializes a new instance of a registered class
</p></abstract>
<parameterlist>
<parameter><name>classID</name><desc><p>The class type ID</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSClassID</type><name>classID</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSObjectRef</returntype>
<result><p>The allocated instance
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSObjectRef</declaration_type> <declaration_function>XSRuntime_CreateInstance</declaration_function>(
    <declaration_type>XSClassID</declaration_type> <declaration_param>classID</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRuntime_CreateInstanceOfClassNamed" lang="c"><name>XSRuntime_CreateInstanceOfClassNamed</name>
<abstract><p>Initializes a new instance of a class with a specific name
</p></abstract>
<parameterlist>
<parameter><name>name</name><desc><p>The name of the class</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>const char *</type><name>name</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSObjectRef</returntype>
<result><p>The allocated instance
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSObjectRef</declaration_type> <declaration_function>XSRuntime_CreateInstanceOfClassNamed</declaration_function>(
    <declaration_keyword>const</declaration_keyword> <declaration_type>char</declaration_type> <declaration_type>*</declaration_type><declaration_param>name</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRuntime_GetClassID" lang="c"><name>XSRuntime_GetClassID</name>
<abstract><p>Gets the class type ID for an object
</p></abstract>
<parameterlist>
<parameter><name>object</name><desc><p>The object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSClassID</returntype>
<result><p>The class type ID for the object
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSClassID</declaration_type> <declaration_function>XSRuntime_GetClassID</declaration_function>(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRuntime_GetClassIDOfClassNamed" lang="c"><name>XSRuntime_GetClassIDOfClassNamed</name>
<abstract><p>Gets the class type ID for a class with a specific name
</p></abstract>
<parameterlist>
<parameter><name>className</name><desc><p>The name of the class</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>const char *</type><name>className</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSClassID</returntype>
<result><p>The class type ID
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSClassID</declaration_type> <declaration_function>XSRuntime_GetClassIDOfClassNamed</declaration_function>(
    <declaration_keyword>const</declaration_keyword> <declaration_type>char</declaration_type> <declaration_type>*</declaration_type><declaration_param>className</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRuntime_GetClassName" lang="c"><name>XSRuntime_GetClassName</name>
<abstract><p>Gets the class name for an class type ID
</p></abstract>
<parameterlist>
<parameter><name>classID</name><desc><p>The class type ID</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSClassID</type><name>classID</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT const char *</returntype>
<result><p>The name of the class
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_keyword>const</declaration_keyword> <declaration_type>char</declaration_type> <declaration_type>*</declaration_type> <declaration_function>XSRuntime_GetClassName</declaration_function>(
    <declaration_type>XSClassID</declaration_type> <declaration_param>classID</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRuntime_GetClassType" lang="c"><name>XSRuntime_GetClassType</name>
<abstract><p>Gets the class type for an class type ID
</p></abstract>
<parameterlist>
<parameter><name>classID</name><desc><p>The class type ID</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSClassID</type><name>classID</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSClassType</returntype>
<result><p>The type of the class
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSClassType</declaration_type> <declaration_function>XSRuntime_GetClassType</declaration_function>(
    <declaration_type>XSClassID</declaration_type> <declaration_param>classID</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRuntime_GetDescription" lang="c"><name>XSRuntime_GetDescription</name>
<abstract><p>Gets an object's description
</p></abstract>
<parameterlist>
<parameter><name>object</name><desc><p>The pointer to the object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSObjectRef</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT const char *</returntype>
<result><p>The object's description
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_keyword>const</declaration_keyword> <declaration_type>char</declaration_type> <declaration_type>*</declaration_type> <declaration_function>XSRuntime_GetDescription</declaration_function>(
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRuntime_GetSharedInstance" lang="c"><name>XSRuntime_GetSharedInstance</name>
<abstract><p>Gets the shared instance of a registered class
</p></abstract>
<parameterlist>
<parameter><name>classID</name><desc><p>The class type ID</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSClassID</type><name>classID</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSObjectRef</returntype>
<result><p>The shared instance if it exists, otherwise NULL
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSObjectRef</declaration_type> <declaration_function>XSRuntime_GetSharedInstance</declaration_function>(
    <declaration_type>XSClassID</declaration_type> <declaration_param>classID</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRuntime_Initialize" lang="c"><name>XSRuntime_Initialize</name>
<abstract><p>Initializes the XSFoundation runtime
</p></abstract>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSRuntime_Initialize</declaration_function>(
    <declaration_param>void</declaration_param> );  </declaration>
<desc><p>This function must be called before using any XSFoundation
function.
</p></desc>
</function><function id="//xsdoc_ref/c/func/XSRuntime_IsInstance" lang="c"><name>XSRuntime_IsInstance</name>
<abstract><p>Checks whether a pointer is an object instance
</p></abstract>
<parameterlist>
<parameter><name>ptr</name><desc><p>The pointer to check</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>void *</type><name>ptr</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT bool</returntype>
<result><p>True if the pointer represents an instance, otherwise false
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>bool</declaration_type> <declaration_function>XSRuntime_IsInstance</declaration_function>(
    <declaration_type>void</declaration_type> <declaration_type>*</declaration_type><declaration_param>ptr</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRuntime_IsRegisteredClass" lang="c"><name>XSRuntime_IsRegisteredClass</name>
<abstract><p>Checks whether a class type ID corresponds to a registered class
</p></abstract>
<parameterlist>
<parameter><name>classID</name><desc><p>The class type ID</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSClassID</type><name>classID</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT bool</returntype>
<result><p>True if the class ID represents an valid class, otherwise false
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>bool</declaration_type> <declaration_function>XSRuntime_IsRegisteredClass</declaration_function>(
    <declaration_type>XSClassID</declaration_type> <declaration_param>classID</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRuntime_RegisterClass" lang="c"><name>XSRuntime_RegisterClass</name>
<abstract><p>Registers a class for the runtime
</p></abstract>
<parameterlist>
<parameter><name>cls</name><desc><p>The class information structure to register</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>const XSClassInfo * const</type><name>cls</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSClassID</returntype>
<result><p>The runtime type ID for the class
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSClassID</declaration_type> <declaration_function>XSRuntime_RegisterClass</declaration_function>(
    <declaration_keyword>const</declaration_keyword> <declaration_type>XSClassInfo</declaration_type> <declaration_type>*</declaration_type><declaration_keyword>const</declaration_keyword> <declaration_param>cls</declaration_param> );  </declaration>
<desc><p>All runtime classes needs to be registered before the runtime
can use them and create instances.
This function needs to be called once per class,
ie using pthread_once().
</p></desc>
</function><function id="//xsdoc_ref/c/func/XSRuntime_RegisterFinalizer" lang="c"><name>XSRuntime_RegisterFinalizer</name>
<abstract><p>Registers a finalizer function, to be called when the program exits
</p></abstract>
<parameterlist>
<parameter><name>func</name><desc><p>The finalizer function</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>void</type><name>func</name></parsedparameter>
</parsedparameterlist>
<returntype> void</returntype>
<declaration><declaration_type>void</declaration_type> <declaration_function>XSRuntime_RegisterFinalizer</declaration_function>(
    <declaration_type>void</declaration_type> ( <declaration_type>*</declaration_type> <declaration_param>func</declaration_param> )(
        <declaration_param>void</declaration_param> ) );  </declaration>
<desc><p>Based on its address, a finalizer function will only be
registered once.
</p></desc>
</function></functions>
<copyrightinfo>&#169; (c) 2010-2014 - Jean-David Gadina - www.xs-labs.com
</copyrightinfo>
<timestamp>Thursday, September 04, 2014</timestamp>
</header>