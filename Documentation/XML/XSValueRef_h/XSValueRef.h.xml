<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE header PUBLIC "-//Apple Computer//DTD HEADERDOC 1.6//EN" "/System/Library/DTDs/HeaderDoc-1.6.dtd">
<header id="//xsdoc_ref/doc/header/XSValueRef.h" lang="c" filename="XSValueRef.h" headerpath="/Users/macmade/Documents/Macmade/Development/GitHub/XSFoundation/XSFoundation/include/XS/Classes/XSValueRef.h"><name>XSValueRef.h</name>
<abstract><p>XSValue class
</p></abstract>
<attributes><attribute><name>Author</name><value>Jean-David Gadina - www.xs-labs.com</value></attribute>
</attributes>
<includes>
<include><hd_link logicalPath="//xsdoc_ref/doc/header/XSTypes.h">&lt;XS/XSTypes.h&gt;</hd_link></include>
<include><hd_link logicalPath="//xsdoc_ref/doc/header/XSMacros.h">&lt;XS/XSMacros.h&gt;</hd_link></include>
</includes>
<desc><p>...
</p></desc>
<functions><function id="//xsdoc_ref/c/func/XSValue_CreateWithEdgeInsets" lang="c"><name>XSValue_CreateWithEdgeInsets</name>
<abstract><p>Creates an XSValue object from an XSEdgeInsets value
</p></abstract>
<parameterlist>
<parameter><name>insets</name><desc><p>The XSEdgeInsets value</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSEdgeInsets</type><name>insets</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSValueRef</returntype>
<result><p>An XSValue object
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSValueRef</declaration_type> <declaration_function>XSValue_CreateWithEdgeInsets</declaration_function>(
    <declaration_type>XSEdgeInsets</declaration_type> <declaration_param>insets</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSValue_CreateWithPoint" lang="c"><name>XSValue_CreateWithPoint</name>
<abstract><p>Creates an XSValue object from an XSPoint value
</p></abstract>
<parameterlist>
<parameter><name>point</name><desc><p>The XSPoint value</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSPoint</type><name>point</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSValueRef</returntype>
<result><p>An XSValue object
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSValueRef</declaration_type> <declaration_function>XSValue_CreateWithPoint</declaration_function>(
    <declaration_type>XSPoint</declaration_type> <declaration_param>point</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSValue_CreateWithPointer" lang="c"><name>XSValue_CreateWithPointer</name>
<abstract><p>Creates an XSValue object from a pointer
</p></abstract>
<parameterlist>
<parameter><name>pointer</name><desc><p>The pointer value</p></desc></parameter>
<parameter><name>association</name><desc><p>The association type for the pointer value</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>const void *</type><name>pointer</name></parsedparameter>
<parsedparameter><type>XSObjectAssociation</type><name>association</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSValueRef</returntype>
<result><p>An XSValue object
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSValueRef</declaration_type> <declaration_function>XSValue_CreateWithPointer</declaration_function>(
    <declaration_keyword>const</declaration_keyword> <declaration_type>void</declaration_type> <declaration_type>*</declaration_type><declaration_param>pointer</declaration_param>,
    <declaration_type>XSObjectAssociation</declaration_type> <declaration_param>association</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSValue_CreateWithRange" lang="c"><name>XSValue_CreateWithRange</name>
<abstract><p>Creates an XSValue object from an XSRange value
</p></abstract>
<parameterlist>
<parameter><name>range</name><desc><p>The XSRange value</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRange</type><name>range</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSValueRef</returntype>
<result><p>An XSValue object
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSValueRef</declaration_type> <declaration_function>XSValue_CreateWithRange</declaration_function>(
    <declaration_type>XSRange</declaration_type> <declaration_param>range</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSValue_CreateWithRect" lang="c"><name>XSValue_CreateWithRect</name>
<abstract><p>Creates an XSValue object from an XSRect value
</p></abstract>
<parameterlist>
<parameter><name>rect</name><desc><p>The XSRect value</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>rect</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSValueRef</returntype>
<result><p>An XSValue object
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSValueRef</declaration_type> <declaration_function>XSValue_CreateWithRect</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>rect</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSValue_CreateWithSize" lang="c"><name>XSValue_CreateWithSize</name>
<abstract><p>Creates an XSValue object from an XSSize value
</p></abstract>
<parameterlist>
<parameter><name>size</name><desc><p>The XSSize value</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSSize</type><name>size</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSValueRef</returntype>
<result><p>An XSValue object
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSValueRef</declaration_type> <declaration_function>XSValue_CreateWithSize</declaration_function>(
    <declaration_type>XSSize</declaration_type> <declaration_param>size</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSValue_GetClassID" lang="c"><name>XSValue_GetClassID</name>
<abstract><p>Gets the class ID for XSValue
</p></abstract>
<returntype> XS_EXPORT XSStatic XSClassID</returntype>
<result><p>The class ID for XSValue
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSClassID</declaration_type> <declaration_function>XSValue_GetClassID</declaration_function>(
    <declaration_param>void</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSValue_GetEdgeInsetsValue" lang="c"><name>XSValue_GetEdgeInsetsValue</name>
<abstract><p>Gets the XSEdgeInsets value of an XSValue object
</p></abstract>
<parameterlist>
<parameter><name>object</name><desc><p>The XSValue object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSValueRef</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSEdgeInsets</returntype>
<result><p>The XSEdgeInsets value
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSEdgeInsets</declaration_type> <declaration_function>XSValue_GetEdgeInsetsValue</declaration_function>(
    <declaration_type>XSValueRef</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSValue_GetPointerValue" lang="c"><name>XSValue_GetPointerValue</name>
<abstract><p>Gets the pointer value of an XSValue object
</p></abstract>
<parameterlist>
<parameter><name>object</name><desc><p>The XSValue object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSValueRef</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT void *</returntype>
<result><p>The pointer value
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_type>*</declaration_type> <declaration_function>XSValue_GetPointerValue</declaration_function>(
    <declaration_type>XSValueRef</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSValue_GetPointValue" lang="c"><name>XSValue_GetPointValue</name>
<abstract><p>Gets the XSPoint value of an XSValue object
</p></abstract>
<parameterlist>
<parameter><name>object</name><desc><p>The XSValue object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSValueRef</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSPoint</returntype>
<result><p>The XSPoint value
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSPoint</declaration_type> <declaration_function>XSValue_GetPointValue</declaration_function>(
    <declaration_type>XSValueRef</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSValue_GetRangeValue" lang="c"><name>XSValue_GetRangeValue</name>
<abstract><p>Gets the XSRange value of an XSValue object
</p></abstract>
<parameterlist>
<parameter><name>object</name><desc><p>The XSValue object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSValueRef</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSRange</returntype>
<result><p>The XSRange value
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSRange</declaration_type> <declaration_function>XSValue_GetRangeValue</declaration_function>(
    <declaration_type>XSValueRef</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSValue_GetRectValue" lang="c"><name>XSValue_GetRectValue</name>
<abstract><p>Gets the XSRect value of an XSValue object
</p></abstract>
<parameterlist>
<parameter><name>object</name><desc><p>The XSValue object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSValueRef</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSRect</returntype>
<result><p>The XSRect value
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSRect</declaration_type> <declaration_function>XSValue_GetRectValue</declaration_function>(
    <declaration_type>XSValueRef</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSValue_GetSizeValue" lang="c"><name>XSValue_GetSizeValue</name>
<abstract><p>Gets the XSSize value of an XSValue object
</p></abstract>
<parameterlist>
<parameter><name>object</name><desc><p>The XSValue object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSValueRef</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSSize</returntype>
<result><p>The XSSize value
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSSize</declaration_type> <declaration_function>XSValue_GetSizeValue</declaration_function>(
    <declaration_type>XSValueRef</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSValue_GetValueType" lang="c"><name>XSValue_GetValueType</name>
<abstract><p>Gets the value type of an XSValue object
</p></abstract>
<parameterlist>
<parameter><name>object</name><desc><p>The XSValue object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSValueRef</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSValue_ValueType</returntype>
<result><p>The XSValue object's type
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSValue_ValueType</declaration_type> <declaration_function>XSValue_GetValueType</declaration_function>(
    <declaration_type>XSValueRef</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSValue_ValueWithEdgeInsets" lang="c"><name>XSValue_ValueWithEdgeInsets</name>
<abstract><p>Gets an XSValue object from an XSEdgeInsets value
</p></abstract>
<parameterlist>
<parameter><name>insets</name><desc><p>The XSEdgeInsets value</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSEdgeInsets</type><name>insets</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSAutoreleased XSValueRef</returntype>
<result><p>An XSValue object (autoreleased)
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSAutoreleased</declaration_type> <declaration_type>XSValueRef</declaration_type> <declaration_function>XSValue_ValueWithEdgeInsets</declaration_function>(
    <declaration_type>XSEdgeInsets</declaration_type> <declaration_param>insets</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSValue_ValueWithPoint" lang="c"><name>XSValue_ValueWithPoint</name>
<abstract><p>Gets an XSValue object from an XSPoint value
</p></abstract>
<parameterlist>
<parameter><name>point</name><desc><p>The XSPoint value</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSPoint</type><name>point</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSAutoreleased XSValueRef</returntype>
<result><p>An XSValue object (autoreleased)
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSAutoreleased</declaration_type> <declaration_type>XSValueRef</declaration_type> <declaration_function>XSValue_ValueWithPoint</declaration_function>(
    <declaration_type>XSPoint</declaration_type> <declaration_param>point</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSValue_ValueWithPointer" lang="c"><name>XSValue_ValueWithPointer</name>
<abstract><p>Gets an XSValue object from a pointer
</p></abstract>
<parameterlist>
<parameter><name>pointer</name><desc><p>The pointer value</p></desc></parameter>
<parameter><name>association</name><desc><p>The association type for the pointer value</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>const void *</type><name>pointer</name></parsedparameter>
<parsedparameter><type>XSObjectAssociation</type><name>association</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSAutoreleased XSValueRef</returntype>
<result><p>An XSValue object (autoreleased)
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSAutoreleased</declaration_type> <declaration_type>XSValueRef</declaration_type> <declaration_function>XSValue_ValueWithPointer</declaration_function>(
    <declaration_keyword>const</declaration_keyword> <declaration_type>void</declaration_type> <declaration_type>*</declaration_type><declaration_param>pointer</declaration_param>,
    <declaration_type>XSObjectAssociation</declaration_type> <declaration_param>association</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSValue_ValueWithRange" lang="c"><name>XSValue_ValueWithRange</name>
<abstract><p>Gets an XSValue object from an XSRange value
</p></abstract>
<parameterlist>
<parameter><name>range</name><desc><p>The XSRange value</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRange</type><name>range</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSAutoreleased XSValueRef</returntype>
<result><p>An XSValue object (autoreleased)
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSAutoreleased</declaration_type> <declaration_type>XSValueRef</declaration_type> <declaration_function>XSValue_ValueWithRange</declaration_function>(
    <declaration_type>XSRange</declaration_type> <declaration_param>range</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSValue_ValueWithRect" lang="c"><name>XSValue_ValueWithRect</name>
<abstract><p>Gets an XSValue object from an XSRect value
</p></abstract>
<parameterlist>
<parameter><name>rect</name><desc><p>The XSRect value</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>rect</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSAutoreleased XSValueRef</returntype>
<result><p>An XSValue object (autoreleased)
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSAutoreleased</declaration_type> <declaration_type>XSValueRef</declaration_type> <declaration_function>XSValue_ValueWithRect</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>rect</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSValue_ValueWithSize" lang="c"><name>XSValue_ValueWithSize</name>
<abstract><p>Gets an XSValue object from an XSSize value
</p></abstract>
<parameterlist>
<parameter><name>size</name><desc><p>The XSSize value</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSSize</type><name>size</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSStatic XSAutoreleased XSValueRef</returntype>
<result><p>An XSValue object (autoreleased)
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSAutoreleased</declaration_type> <declaration_type>XSValueRef</declaration_type> <declaration_function>XSValue_ValueWithSize</declaration_function>(
    <declaration_type>XSSize</declaration_type> <declaration_param>size</declaration_param> );  </declaration>
<desc><p/></desc>
</function></functions>
<typedefs><typedef id="//xsdoc_ref/c/tdef/XSValue_ValueType" lang="c" type="simple"><name>XSValue_ValueType</name>
<abstract><p>Value type for XSValue objects
</p></abstract>
<constantlist>
<constant><name>XSValue_ValueTypeUnknown</name><desc><p>Unknown/Invalid value type</p></desc></constant>
<constant><name>XSValue_ValueTypePointer</name><desc><p>Pointer value</p></desc></constant>
<constant><name>XSValue_ValueTypePoint</name><desc><p>XSPoint value</p></desc></constant>
<constant><name>XSValue_ValueTypeSize</name><desc><p>XSSize value</p></desc></constant>
<constant><name>XSValue_ValueTypeRect</name><desc><p>XSRect value</p></desc></constant>
<constant><name>XSValue_ValueTypeEdgeInsets</name><desc><p>XSEdgeInsets value</p></desc></constant>
<constant><name>XSValue_ValueTypeRange</name><desc><p>XSRange value</p></desc></constant>
</constantlist>
<parsedparameterlist>
<parsedparameter><type></type><name>XSValue_ValueTypeUnknown</name></parsedparameter>
<parsedparameter><type></type><name>XSValue_ValueTypePointer</name></parsedparameter>
<parsedparameter><type></type><name>XSValue_ValueTypePoint</name></parsedparameter>
<parsedparameter><type></type><name>XSValue_ValueTypeSize</name></parsedparameter>
<parsedparameter><type></type><name>XSValue_ValueTypeRect</name></parsedparameter>
<parsedparameter><type></type><name>XSValue_ValueTypeEdgeInsets</name></parsedparameter>
<parsedparameter><type></type><name>XSValue_ValueTypeRange</name></parsedparameter>
</parsedparameterlist>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_keyword>enum</declaration_keyword> { 
    <declaration_var>XSValue_ValueTypeUnknown</declaration_var> = <declaration_number>0x00</declaration_number>,
    <declaration_comment>/*! Unknown/Invalid value type */</declaration_comment>
    <declaration_var>XSValue_ValueTypePointer</declaration_var> = <declaration_number>0x01</declaration_number>,
    <declaration_comment>/*! Pointer value */</declaration_comment>
    <declaration_var>XSValue_ValueTypePoint</declaration_var> = <declaration_number>0x02</declaration_number>,
    <declaration_comment>/*! XSPoint value */</declaration_comment>
    <declaration_var>XSValue_ValueTypeSize</declaration_var> = <declaration_number>0x03</declaration_number>,
    <declaration_comment>/*! XSSize value */</declaration_comment>
    <declaration_var>XSValue_ValueTypeRect</declaration_var> = <declaration_number>0x04</declaration_number>,
    <declaration_comment>/*! XSRect value */</declaration_comment>
    <declaration_var>XSValue_ValueTypeEdgeInsets</declaration_var> = <declaration_number>0x05</declaration_number>,
    <declaration_comment>/*! XSEdgeInsets value */</declaration_comment>
    <declaration_var>XSValue_ValueTypeRange</declaration_var> = <declaration_number>0x06</declaration_number> <declaration_comment>/*! XSRange value */</declaration_comment>
} <declaration_var>XSValue_ValueType</declaration_var>;  </declaration>
<desc><p/></desc>
</typedef><typedef id="//xsdoc_ref/c/tdef/XSValueRef" lang="c" type="simple"><name>XSValueRef</name>
<abstract><p>Opaque type for XSValue
</p></abstract>
<declaration><declaration_keyword>typedef</declaration_keyword> <declaration_keyword>const</declaration_keyword> <declaration_keyword>struct</declaration_keyword> <declaration_type>__XSValue</declaration_type> <declaration_type>*</declaration_type> <declaration_var>XSValueRef</declaration_var>;  </declaration>
<desc><p/></desc>
</typedef></typedefs><copyrightinfo>&#169; (c) 2010-2014 - Jean-David Gadina - www.xs-labs.com
</copyrightinfo>
<timestamp>Thursday, September 04, 2014</timestamp>
</header>