<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE header PUBLIC "-//Apple Computer//DTD HEADERDOC 1.2//EN" "/System/Library/DTDs/HeaderDoc-1.2.dtd">
<header id="//apple_ref/doc/header/XSStackRef.h" lang="c" filename="XSStackRef.h" headerpath="/Volumes/Brain/Documents/Development/GitHub/XSFoundation/XSFoundation/include/XS/Classes/XSStackRef.h"><name>XSStackRef.h</name>
<includes>
<include><hd_link logicalPath="//apple_ref/doc/header/XSTypes.h">&lt;XS/XSTypes.h&gt;</hd_link></include>
<include><hd_link logicalPath="//apple_ref/doc/header/XSMacros.h">&lt;XS/XSMacros.h&gt;</hd_link></include>
</includes>
<desc><p/></desc>
<functions><function id="//apple_ref/c/func/XSStack_Create" lang="c"><name>XSStack_Create</name>
<abstract><p>Creates a stack object
</p></abstract>
<returntype> XS_EXPORT XSStatic XSStackRef</returntype>
<result><p>The stack object
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSStackRef</declaration_type> <declaration_function>XSStack_Create</declaration_function>(
    <declaration_param>void</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//apple_ref/c/func/XSStack_GetClassID" lang="c"><name>XSStack_GetClassID</name>
<abstract><p>Gets the class ID for XSStack
</p></abstract>
<returntype> XS_EXPORT XSStatic XSClassID</returntype>
<result><p>The class ID for XSStack
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSStatic</declaration_type> <declaration_type>XSClassID</declaration_type> <declaration_function>XSStack_GetClassID</declaration_function>(
    <declaration_param>void</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//apple_ref/c/func/XSStack_GetCount" lang="c"><name>XSStack_GetCount</name>
<abstract><p>Gets the number of object in a XSStackRef object
</p></abstract>
<parameterlist>
<parameter><name>stack</name><desc><p>The stack object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSStackRef</type><name>stack</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSUInteger</returntype>
<result><p>The number of object in the XSStackRef object
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSUInteger</declaration_type> <declaration_function>XSStack_GetCount</declaration_function>(
    <declaration_type>XSStackRef</declaration_type> <declaration_param>stack</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//apple_ref/c/func/XSStack_Pop" lang="c"><name>XSStack_Pop</name>
<abstract><p>Pops an object from a XSStackRef object
</p></abstract>
<parameterlist>
<parameter><name>stack</name><desc><p>The stack object</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSStackRef</type><name>stack</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSObjectRef</returntype>
<result><p>The popped object
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSObjectRef</declaration_type> <declaration_function>XSStack_Pop</declaration_function>(
    <declaration_type>XSStackRef</declaration_type> <declaration_param>stack</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//apple_ref/c/func/XSStack_Push" lang="c"><name>XSStack_Push</name>
<abstract><p>Pushes an object in a XSStackRef object
</p></abstract>
<parameterlist>
<parameter><name>stack</name><desc><p>The stack object</p></desc></parameter>
<parameter><name>object</name><desc><p>The object to push</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSStackRef</type><name>stack</name></parsedparameter>
<parsedparameter><type>XSObjectRef</type><name>object</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT void</returntype>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>void</declaration_type> <declaration_function>XSStack_Push</declaration_function>(
    <declaration_type>XSStackRef</declaration_type> <declaration_param>stack</declaration_param>,
    <declaration_type>XSObjectRef</declaration_type> <declaration_param>object</declaration_param> );  </declaration>
<desc><p/></desc>
</function></functions>
<typedefs><typedef id="//apple_ref/c/tdef/XSStackRef" lang="c" type="simple"><name>XSStackRef</name>
<abstract><p>Opaque type for XSStack
</p></abstract>
<declaration> <declaration_comment>/*!</declaration_comment>
    <declaration_comment>*/</declaration_comment>
<declaration_keyword>typedef</declaration_keyword> <declaration_keyword>struct</declaration_keyword> <declaration_type>__XSStack</declaration_type> <declaration_type>*</declaration_type> <declaration_var>XSStackRef</declaration_var>;  </declaration>
<desc><p>XSStackRef objects are thread-safe
</p></desc>
</typedef></typedefs><defines><pdefine id="//apple_ref/c/macro/__XS_CLASSES_XS_STACK_H__" definetype="value" lang="c"><name>__XS_CLASSES_XS_STACK_H__</name>
<declaration><declaration_preprocessor>#define</declaration_preprocessor> <declaration_preprocessor>__XS_CLASSES_XS_STACK_H__</declaration_preprocessor> </declaration>
</pdefine></defines><timestamp>Wednesday, May 14, 2014</timestamp>
</header>