<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE header PUBLIC "-//Apple Computer//DTD HEADERDOC 1.6//EN" "/System/Library/DTDs/HeaderDoc-1.6.dtd">
<header id="//xsdoc_ref/doc/header/XSGeometry-XSRect.h" lang="c" filename="XSGeometry-XSRect.h" headerpath="/Users/macmade/Documents/Macmade/Development/GitHub/XSFoundation/XSFoundation/include/XS/Functions/XSGeometry-XSRect.h"><name>XSGeometry-XSRect.h</name>
<abstract><p>XSRect functions
</p></abstract>
<attributes><attribute><name>Author</name><value>Jean-David Gadina - www.xs-labs.com</value></attribute>
</attributes>
<includes>
<include><hd_link logicalPath="//xsdoc_ref/doc/header/XSTypes.h">&lt;XS/XSTypes.h&gt;</hd_link></include>
</includes>
<desc><p>...
</p></desc>
<functions><function id="//xsdoc_ref/c/func/XSRect_ContainsPoint" lang="c"><name>XSRect_ContainsPoint</name>
<abstract><p>Checks whether a rectangle contains a specified point
</p></abstract>
<parameterlist>
<parameter><name>rect</name><desc><p>The rectangle</p></desc></parameter>
<parameter><name>point</name><desc><p>The point</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>rect</name></parsedparameter>
<parsedparameter><type>XSPoint</type><name>point</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT bool</returntype>
<result><p>True if the rectangle contains the specified point, otherwise false
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>bool</declaration_type> <declaration_function>XSRect_ContainsPoint</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>rect</declaration_param>,
    <declaration_type>XSPoint</declaration_type> <declaration_param>point</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_ContainsRect" lang="c"><name>XSRect_ContainsRect</name>
<abstract><p>Checks whether a rectangle contains a second rectangle
</p></abstract>
<parameterlist>
<parameter><name>rect1</name><desc><p>The rectangle to examine for containment of the rectangle passed in rect2</p></desc></parameter>
<parameter><name>rect2</name><desc><p>The rectangle to examine for being contained in the rectangle passed in rect1</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>rect1</name></parsedparameter>
<parsedparameter><type>XSRect</type><name>rect2</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT bool</returntype>
<result><p>True if the first rectangle contains the second rectangle, otherwise false
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>bool</declaration_type> <declaration_function>XSRect_ContainsRect</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>rect1</declaration_param>,
    <declaration_type>XSRect</declaration_type> <declaration_param>rect2</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_GetHeight" lang="c"><name>XSRect_GetHeight</name>
<abstract><p>Gets the height of a rectangle
</p></abstract>
<parameterlist>
<parameter><name>rect</name><desc><p>The rectangle</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>rect</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSRectStandardize</name><value><hd_link logicalPath="XSRectStandardize" isseealso="yes">XSRectStandardize</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT XSFloat</returntype>
<result><p>The height of the rectangle
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSFloat</declaration_type> <declaration_function>XSRect_GetHeight</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>rect</declaration_param> );  </declaration>
<desc><p>Regardless of whether the height is a positive or negative
number, this function returns the height as if the rectangle
were standardized.
That is, the result is never a negative number.
</p></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_GetMaxX" lang="c"><name>XSRect_GetMaxX</name>
<abstract><p>Gets the largest value for the X coordinate of the rectangle
</p></abstract>
<parameterlist>
<parameter><name>rect</name><desc><p>The rectangle</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>rect</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSFloat</returntype>
<result><p>The largest value for the X coordinate of the rectangle
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSFloat</declaration_type> <declaration_function>XSRect_GetMaxX</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>rect</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_GetMaxY" lang="c"><name>XSRect_GetMaxY</name>
<abstract><p>Gets the largest value for the Y coordinate of the rectangle
</p></abstract>
<parameterlist>
<parameter><name>rect</name><desc><p>The rectangle</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>rect</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSFloat</returntype>
<result><p>The largest value for the Y coordinate of the rectangle
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSFloat</declaration_type> <declaration_function>XSRect_GetMaxY</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>rect</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_GetMidX" lang="c"><name>XSRect_GetMidX</name>
<abstract><p>Gets the X coordinate that establishes the center of the rectangle
</p></abstract>
<parameterlist>
<parameter><name>rect</name><desc><p>The rectangle</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>rect</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSFloat</returntype>
<result><p>The X coordinate of the center of the specified rectangle
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSFloat</declaration_type> <declaration_function>XSRect_GetMidX</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>rect</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_GetMidY" lang="c"><name>XSRect_GetMidY</name>
<abstract><p>Gets the Y coordinate that establishes the center of the rectangle
</p></abstract>
<parameterlist>
<parameter><name>rect</name><desc><p>The rectangle</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>rect</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSFloat</returntype>
<result><p>The Y coordinate of the center of the specified rectangle
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSFloat</declaration_type> <declaration_function>XSRect_GetMidY</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>rect</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_GetMinX" lang="c"><name>XSRect_GetMinX</name>
<abstract><p>Gets the smallest value for the X coordinate of the rectangle
</p></abstract>
<parameterlist>
<parameter><name>rect</name><desc><p>The rectangle</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>rect</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSFloat</returntype>
<result><p>The smallest value for the X coordinate of the rectangle
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSFloat</declaration_type> <declaration_function>XSRect_GetMinX</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>rect</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_GetMinY" lang="c"><name>XSRect_GetMinY</name>
<abstract><p>Gets the smallest value for the Y coordinate of the rectangle
</p></abstract>
<parameterlist>
<parameter><name>rect</name><desc><p>The rectangle</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>rect</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSFloat</returntype>
<result><p>The smallest value for the Y coordinate of the rectangle
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSFloat</declaration_type> <declaration_function>XSRect_GetMinY</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>rect</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_GetWidth" lang="c"><name>XSRect_GetWidth</name>
<abstract><p>Gets the width of a rectangle
</p></abstract>
<parameterlist>
<parameter><name>rect</name><desc><p>The rectangle</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>rect</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSRectStandardize</name><value><hd_link logicalPath="XSRectStandardize" isseealso="yes">XSRectStandardize</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT XSFloat</returntype>
<result><p>The width of the rectangle
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSFloat</declaration_type> <declaration_function>XSRect_GetWidth</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>rect</declaration_param> );  </declaration>
<desc><p>Regardless of whether the width is a positive or negative
number, this function returns the width as if the rectangle
were standardized.
That is, the result is never a negative number.
</p></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_Inset" lang="c"><name>XSRect_Inset</name>
<abstract><p>Creates a rectangle that is smaller or larger than the source rectangle, with the same center point.
</p></abstract>
<parameterlist>
<parameter><name>rect</name><desc><p>The rectangle</p></desc></parameter>
<parameter><name>dx</name><desc><p>The X coordinate value to use for adjusting the source rectangle</p></desc></parameter>
<parameter><name>dy</name><desc><p>The Y coordinate value to use for adjusting the source rectangle</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>rect</name></parsedparameter>
<parsedparameter><type>XSFloat</type><name>dx</name></parsedparameter>
<parsedparameter><type>XSFloat</type><name>dy</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSRect</returntype>
<result><p>The new rectangle
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSRect</declaration_type> <declaration_function>XSRect_Inset</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>rect</declaration_param>,
    <declaration_type>XSFloat</declaration_type> <declaration_param>dx</declaration_param>,
    <declaration_type>XSFloat</declaration_type> <declaration_param>dy</declaration_param> );  </declaration>
<desc><p>The origin value is offset in the X axis by the distance
specified by dx and in the Y axis by the distance specified by
dy, and its size adjusted by ( 2 * dx, 2 * dy ), relative to the
source rectangle.
If dx and dy are positive values, then the rectangle's size is
decreased.
If dx and dy are negative values, the rectangle's size is
increased.
</p></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_Integral" lang="c"><name>XSRect_Integral</name>
<abstract><p>Creates the smallest rectangle that results from converting the source rectangle values to integers
</p></abstract>
<parameterlist>
<parameter><name>rect</name><desc><p>The rectangle</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>rect</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSRect</returntype>
<result><p>The new rectangle
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSRect</declaration_type> <declaration_function>XSRect_Integral</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>rect</declaration_param> );  </declaration>
<desc><p>Given a rectangle with fractional origin or size values,
this function rounds the rectangle's origin downward and its
size upward to the nearest whole integers, such that the result
contains the original rectangle.
</p></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_Intersection" lang="c"><name>XSRect_Intersection</name>
<abstract><p>Returns the intersection of two rectangles
</p></abstract>
<parameterlist>
<parameter><name>r1</name><desc><p>The first rectangle</p></desc></parameter>
<parameter><name>r2</name><desc><p>The second rectangle</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>r1</name></parsedparameter>
<parsedparameter><type>XSRect</type><name>r2</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSRectStandardize</name><value><hd_link logicalPath="XSRectStandardize" isseealso="yes">XSRectStandardize</hd_link></value></item><item><name>XSRectIsNull</name><value><hd_link logicalPath="XSRectIsNull" isseealso="yes">XSRectIsNull</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT XSRect</returntype>
<result><p>A rectangle that represents the intersection of the two specified rectangles or null rectangle
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSRect</declaration_type> <declaration_function>XSRect_Intersection</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>r1</declaration_param>,
    <declaration_type>XSRect</declaration_type> <declaration_param>r2</declaration_param> );  </declaration>
<desc><p>Both rectangles are standardized prior to calculating the
intersection.
</p></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_IntersectsRect" lang="c"><name>XSRect_IntersectsRect</name>
<abstract><p>Checks whether two rectangles intersect
</p></abstract>
<parameterlist>
<parameter><name>rect1</name><desc><p>The first rectangle</p></desc></parameter>
<parameter><name>rect2</name><desc><p>The second rectangle</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>rect1</name></parsedparameter>
<parsedparameter><type>XSRect</type><name>rect2</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT bool</returntype>
<result><p>True if the rectangles intersect, otherwise false
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>bool</declaration_type> <declaration_function>XSRect_IntersectsRect</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>rect1</declaration_param>,
    <declaration_type>XSRect</declaration_type> <declaration_param>rect2</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_IsEmpty" lang="c"><name>XSRect_IsEmpty</name>
<abstract><p>Checks whether a rectangle has zero width or height
</p></abstract>
<parameterlist>
<parameter><name>rect</name><desc><p>The rectangle</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>rect</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT bool</returntype>
<result><p>True if the rectangle has zero width or height, otherwise false
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>bool</declaration_type> <declaration_function>XSRect_IsEmpty</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>rect</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_IsEqualToToRect" lang="c"><name>XSRect_IsEqualToToRect</name>
<abstract><p>Checks if two rectangles are equal
</p></abstract>
<parameterlist>
<parameter><name>r1</name><desc><p>The first rectangle to compare</p></desc></parameter>
<parameter><name>r2</name><desc><p>The second rectangle to compare</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>r1</name></parsedparameter>
<parsedparameter><type>XSRect</type><name>r2</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT bool</returntype>
<result><p>True if both rectangles are equal, otherwise false
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>bool</declaration_type> <declaration_function>XSRect_IsEqualToToRect</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>r1</declaration_param>,
    <declaration_type>XSRect</declaration_type> <declaration_param>r2</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_IsNull" lang="c"><name>XSRect_IsNull</name>
<abstract><p>Checks whether a rectangle is a null rectangle
</p></abstract>
<parameterlist>
<parameter><name>rect</name><desc><p>The rectangle</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>rect</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT bool</returntype>
<result><p>True if the rectangle is a null rectangle, otherwise false
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>bool</declaration_type> <declaration_function>XSRect_IsNull</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>rect</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_Make" lang="c"><name>XSRect_Make</name>
<abstract><p>Creates a rectangle with the specified coordinates, width and height
</p></abstract>
<parameterlist>
<parameter><name>x</name><desc><p>The X coordinate</p></desc></parameter>
<parameter><name>y</name><desc><p>The Y coordinate</p></desc></parameter>
<parameter><name>width</name><desc><p>The width</p></desc></parameter>
<parameter><name>height</name><desc><p>The height</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSFloat</type><name>x</name></parsedparameter>
<parsedparameter><type>XSFloat</type><name>y</name></parsedparameter>
<parsedparameter><type>XSFloat</type><name>width</name></parsedparameter>
<parsedparameter><type>XSFloat</type><name>height</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSRect</returntype>
<result><p>The rectangle
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSRect</declaration_type> <declaration_function>XSRect_Make</declaration_function>(
    <declaration_type>XSFloat</declaration_type> <declaration_param>x</declaration_param>,
    <declaration_type>XSFloat</declaration_type> <declaration_param>y</declaration_param>,
    <declaration_type>XSFloat</declaration_type> <declaration_param>width</declaration_param>,
    <declaration_type>XSFloat</declaration_type> <declaration_param>height</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_Null" lang="c"><name>XSRect_Null</name>
<abstract><p>Creates a null rectangle
</p></abstract>
<returntype> XS_EXPORT XSRect</returntype>
<result><p>The null rectangle
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSRect</declaration_type> <declaration_function>XSRect_Null</declaration_function>(
    <declaration_param>void</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_Offset" lang="c"><name>XSRect_Offset</name>
<abstract><p>Creates a rectangle with an origin that is offset from that of the source rectangle
</p></abstract>
<parameterlist>
<parameter><name>rect</name><desc><p>The first rectangle</p></desc></parameter>
<parameter><name>dx</name><desc><p>The offset value for the X coordinate</p></desc></parameter>
<parameter><name>dy</name><desc><p>The offset value for the Y coordinate</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>rect</name></parsedparameter>
<parsedparameter><type>XSFloat</type><name>dx</name></parsedparameter>
<parsedparameter><type>XSFloat</type><name>dy</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSRect</returntype>
<result><p>A rectangle that is the same size as the source, but with its origin offset by dx units along the x-axis and dy units along the y-axis with respect to the source
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSRect</declaration_type> <declaration_function>XSRect_Offset</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>rect</declaration_param>,
    <declaration_type>XSFloat</declaration_type> <declaration_param>dx</declaration_param>,
    <declaration_type>XSFloat</declaration_type> <declaration_param>dy</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_Standardize" lang="c"><name>XSRect_Standardize</name>
<abstract><p>Creates a rectangle with a positive width and height
</p></abstract>
<parameterlist>
<parameter><name>rect</name><desc><p>The rectangle</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>rect</name></parsedparameter>
</parsedparameterlist>
<returntype> XS_EXPORT XSRect</returntype>
<result><p>A rectangle with a positive width and height
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSRect</declaration_type> <declaration_function>XSRect_Standardize</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>rect</declaration_param> );  </declaration>
<desc><p/></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_Union" lang="c"><name>XSRect_Union</name>
<abstract><p>Creates the smallest rectangle that contains the two source rectangles
</p></abstract>
<parameterlist>
<parameter><name>r1</name><desc><p>The first rectangle</p></desc></parameter>
<parameter><name>r2</name><desc><p>The second rectangle</p></desc></parameter>
</parameterlist>
<parsedparameterlist>
<parsedparameter><type>XSRect</type><name>r1</name></parsedparameter>
<parsedparameter><type>XSRect</type><name>r2</name></parsedparameter>
</parsedparameterlist>
<attributelists><listattribute><name>See</name><list>
<item><name>XSRectStandardize</name><value><hd_link logicalPath="XSRectStandardize" isseealso="yes">XSRectStandardize</hd_link></value></item><item><name>XSRectIsNull</name><value><hd_link logicalPath="XSRectIsNull" isseealso="yes">XSRectIsNull</hd_link></value></item></list></listattribute>
</attributelists>
<returntype> XS_EXPORT XSRect</returntype>
<result><p>The smallest rectangle that completely contains both of the source rectangles
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSRect</declaration_type> <declaration_function>XSRect_Union</declaration_function>(
    <declaration_type>XSRect</declaration_type> <declaration_param>r1</declaration_param>,
    <declaration_type>XSRect</declaration_type> <declaration_param>r2</declaration_param> );  </declaration>
<desc><p>Both rectangles are standardized prior to calculating the union.
If either of the rectangles is a null rectangle, a copy of the
other rectangle is returned (resulting in a null rectangle if
both rectangles are null).
Otherwise a rectangle that completely contains the source
rectangles is returned.
</p></desc>
</function><function id="//xsdoc_ref/c/func/XSRect_Zero" lang="c"><name>XSRect_Zero</name>
<abstract><p>Creates a rectangle with zero coordinates, width and height
</p></abstract>
<returntype> XS_EXPORT XSRect</returntype>
<result><p>The rectangle
</p></result>
<declaration><declaration_type>XS_EXPORT</declaration_type> <declaration_type>XSRect</declaration_type> <declaration_function>XSRect_Zero</declaration_function>(
    <declaration_param>void</declaration_param> );  </declaration>
<desc><p/></desc>
</function></functions>
<copyrightinfo>&#169; (c) 2010-2014 - Jean-David Gadina - www.xs-labs.com
</copyrightinfo>
<timestamp>Thursday, September 04, 2014</timestamp>
</header>