.TH "XSSet.h" 3 "Sun Apr 24 2011" "Version 1.2.2-0" "XSFoundation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
XSSet.h \- 
.PP
XSSet class functions.  

.SH SYNOPSIS
.br
.PP
\fC#include 'XSMacros.h'\fP
.br

.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct __XSObject_Struct * \fBXSSet\fP"
.br
.RI "\fIOpaque type for the XSSet objects. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBXSSet_AddValue\fP (\fBXSSet\fP xsThis, \fBXSObject\fP value)"
.br
.RI "\fIAdds a value in the set. \fP"
.ti -1c
.RI "XSStatic \fBXSObject\fP \fBXSSet_Alloc\fP (void)"
.br
.RI "\fIObject allocator. \fP"
.ti -1c
.RI "\fBBOOL\fP \fBXSSet_ContainsValue\fP (\fBXSSet\fP xsThis, \fBXSObject\fP value)"
.br
.RI "\fIChecks if a set contains a value. \fP"
.ti -1c
.RI "\fBXSUInteger\fP \fBXSSet_Count\fP (\fBXSSet\fP xsThis)"
.br
.RI "\fIGets the number of values in the set. \fP"
.ti -1c
.RI "void * \fBXSSet_Current\fP (\fBXSSet\fP xsThis)"
.br
.RI "\fIGets the current set value. \fP"
.ti -1c
.RI "\fBXSUInteger\fP \fBXSSet_Index\fP (\fBXSSet\fP xsThis)"
.br
.RI "\fIGets the current set index. \fP"
.ti -1c
.RI "\fBXSObject\fP \fBXSSet_Init\fP (\fBXSObject\fP xsThis)"
.br
.RI "\fIInitializes an empty set. \fP"
.ti -1c
.RI "\fBXSSet\fP \fBXSSet_InitWithCapacity\fP (\fBXSSet\fP xsThis, \fBXSUInteger\fP capacity)"
.br
.RI "\fIInitializes an empty set with an initial capacity. \fP"
.ti -1c
.RI "\fBXSSet\fP \fBXSSet_InitWithValues\fP (\fBXSSet\fP xsThis, \fBXSObject\fP value1,...)"
.br
.RI "\fIInitializes a set with values. \fP"
.ti -1c
.RI "void * \fBXSSet_Next\fP (\fBXSSet\fP xsThis)"
.br
.RI "\fIIncreases the internal value pointer and returns the value. \fP"
.ti -1c
.RI "void * \fBXSSet_Previous\fP (\fBXSSet\fP xsThis)"
.br
.RI "\fIDecrease the internal value pointer and returns the value. \fP"
.ti -1c
.RI "void \fBXSSet_RemoveValue\fP (\fBXSSet\fP xsThis, \fBXSObject\fP value)"
.br
.RI "\fIRemoves a value in the set. \fP"
.ti -1c
.RI "void \fBXSSet_ReplaceValue\fP (\fBXSSet\fP xsThis, \fBXSObject\fP valueOld, \fBXSObject\fP valueNew)"
.br
.RI "\fIReplaces a value in the set. \fP"
.ti -1c
.RI "void \fBXSSet_Rewind\fP (\fBXSSet\fP xsThis)"
.br
.RI "\fISets the internal value pointer to the first value in the set. \fP"
.in -1c
.SH "Detailed Description"
.PP 
XSSet class functions. 

\fBAuthor:\fP
.RS 4
Jean-David Gadina <macmade@eosgarden.com> 
.RE
.PP

.PP
Definition in file \fBXSSet.h\fP.
.SH "Typedef Documentation"
.PP 
.SS "\fBXSSet\fP"
.PP
Opaque type for the XSSet objects. 
.PP
Definition at line 50 of file XSSet.h.
.SH "Function Documentation"
.PP 
.SS "void XSSet_AddValue (\fBXSSet\fPxsThis, \fBXSObject\fPvalue)"
.PP
Adds a value in the set. The new value will be retained 
.PP
\fBParameters:\fP
.RS 4
\fIxsThis\fP The set object 
.br
\fIvalue\fP The value to add 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "XSStatic \fBXSObject\fP XSSet_Alloc (void)"
.PP
Object allocator. \fBReturns:\fP
.RS 4
The allocated object 
.RE
.PP

.SS "\fBBOOL\fP XSSet_ContainsValue (\fBXSSet\fPxsThis, \fBXSObject\fPvalue)"
.PP
Checks if a set contains a value. \fBParameters:\fP
.RS 4
\fIxsThis\fP The set object 
.br
\fIvalue\fP The value to check 
.RE
.PP
\fBReturns:\fP
.RS 4
True if the set contains the value, otherwise false 
.RE
.PP

.SS "\fBXSUInteger\fP XSSet_Count (\fBXSSet\fPxsThis)"
.PP
Gets the number of values in the set. \fBParameters:\fP
.RS 4
\fIxsThis\fP The set object 
.RE
.PP
\fBReturns:\fP
.RS 4
The number of values 
.RE
.PP

.SS "void* XSSet_Current (\fBXSSet\fPxsThis)"
.PP
Gets the current set value. \fBParameters:\fP
.RS 4
\fIxsThis\fP The set object 
.RE
.PP
\fBReturns:\fP
.RS 4
The current set value 
.RE
.PP

.SS "\fBXSUInteger\fP XSSet_Index (\fBXSSet\fPxsThis)"
.PP
Gets the current set index. \fBParameters:\fP
.RS 4
\fIxsThis\fP The set object 
.RE
.PP
\fBReturns:\fP
.RS 4
The current set index 
.RE
.PP

.SS "\fBXSObject\fP XSSet_Init (\fBXSObject\fPxsThis)"
.PP
Initializes an empty set. \fBParameters:\fP
.RS 4
\fIxsThis\fP The set object 
.RE
.PP
\fBReturns:\fP
.RS 4
The set object 
.RE
.PP

.SS "\fBXSSet\fP XSSet_InitWithCapacity (\fBXSSet\fPxsThis, \fBXSUInteger\fPcapacity)"
.PP
Initializes an empty set with an initial capacity. \fBParameters:\fP
.RS 4
\fIxsThis\fP The set object 
.br
\fIcapacity\fP The initial capacityThe set object 
.RE
.PP
\fBReturns:\fP
.RS 4
The set object 
.RE
.PP

.SS "\fBXSSet\fP XSSet_InitWithValues (\fBXSSet\fPxsThis, \fBXSObject\fPvalue1, ...)"
.PP
Initializes a set with values. \fBParameters:\fP
.RS 4
\fIxsThis\fP The set object 
.br
\fIvalue1\fP The first value 
.br
\fI...\fP Other values, terminated by a NULL fence 
.RE
.PP
\fBReturns:\fP
.RS 4
The set object 
.RE
.PP

.SS "void* XSSet_Next (\fBXSSet\fPxsThis)"
.PP
Increases the internal value pointer and returns the value. \fBParameters:\fP
.RS 4
\fIxsThis\fP The set object 
.RE
.PP
\fBReturns:\fP
.RS 4
The set value 
.RE
.PP

.SS "void* XSSet_Previous (\fBXSSet\fPxsThis)"
.PP
Decrease the internal value pointer and returns the value. \fBParameters:\fP
.RS 4
\fIxsThis\fP The set object 
.RE
.PP
\fBReturns:\fP
.RS 4
The set value 
.RE
.PP

.SS "void XSSet_RemoveValue (\fBXSSet\fPxsThis, \fBXSObject\fPvalue)"
.PP
Removes a value in the set. The removed value will be released 
.PP
\fBParameters:\fP
.RS 4
\fIxsThis\fP The set object 
.br
\fIvalue\fP The value to remove 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "void XSSet_ReplaceValue (\fBXSSet\fPxsThis, \fBXSObject\fPvalueOld, \fBXSObject\fPvalueNew)"
.PP
Replaces a value in the set. The old value will be released, and the new will be retained 
.PP
\fBParameters:\fP
.RS 4
\fIxsThis\fP The set object 
.br
\fIvalueOld\fP The value to replace 
.br
\fIvalueNew\fP The new value 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "void XSSet_Rewind (\fBXSSet\fPxsThis)"
.PP
Sets the internal value pointer to the first value in the set. \fBParameters:\fP
.RS 4
\fIxsThis\fP The set object 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for XSFoundation from the source code.
