.TH "XSArray.h" 3 "Sun Apr 24 2011" "Version 1.2.2-0" "XSFoundation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
XSArray.h \- 
.PP
XSArray class functions.  

.SH SYNOPSIS
.br
.PP
\fC#include 'XSMacros.h'\fP
.br

.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fB__XSArray_Struct\fP * \fBXSArray\fP"
.br
.RI "\fIOpaque type for the XSArray objects. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "XSStatic \fBXSObject\fP \fBXSArray_Alloc\fP (void)"
.br
.RI "\fIObject allocator. \fP"
.ti -1c
.RI "void \fBXSArray_AppendValue\fP (\fBXSArray\fP xsThis, \fBXSObject\fP value)"
.br
.RI "\fIAppends a value at the end of the array. \fP"
.ti -1c
.RI "\fBBOOL\fP \fBXSArray_ContainsValue\fP (\fBXSArray\fP xsThis, \fBXSObject\fP value)"
.br
.RI "\fIChecks if the array contains a specific value. \fP"
.ti -1c
.RI "\fBXSUInteger\fP \fBXSArray_Count\fP (\fBXSArray\fP xsThis)"
.br
.RI "\fIGets the number of values in the array. \fP"
.ti -1c
.RI "XSAutoreleased \fBXSObject\fP \fBXSArray_Current\fP (\fBXSArray\fP xsThis)"
.br
.RI "\fIGets the current array value. \fP"
.ti -1c
.RI "\fBXSUInteger\fP \fBXSArray_Index\fP (\fBXSArray\fP xsThis)"
.br
.RI "\fIGets the current array index. \fP"
.ti -1c
.RI "\fBXSObject\fP \fBXSArray_Init\fP (\fBXSObject\fP xsThis)"
.br
.RI "\fIInitializes an empty array. \fP"
.ti -1c
.RI "\fBXSArray\fP \fBXSArray_InitWithCapacity\fP (\fBXSArray\fP xsThis, \fBXSUInteger\fP capacity)"
.br
.RI "\fIInitializes an empty array with an initial capacity. \fP"
.ti -1c
.RI "\fBXSArray\fP \fBXSArray_InitWithValues\fP (\fBXSArray\fP xsThis, \fBXSObject\fP value1,...)"
.br
.RI "\fIInitializes an array with values. \fP"
.ti -1c
.RI "void \fBXSArray_InsertValueAtIndex\fP (\fBXSArray\fP xsThis, \fBXSObject\fP value, \fBXSUInteger\fP i)"
.br
.RI "\fIInsert a value at a specific index. \fP"
.ti -1c
.RI "XSAutoreleased \fBXSObject\fP \fBXSArray_Next\fP (\fBXSArray\fP xsThis)"
.br
.RI "\fIIncreases the internal value pointer and returns the value. \fP"
.ti -1c
.RI "XSAutoreleased \fBXSObject\fP \fBXSArray_Previous\fP (\fBXSArray\fP xsThis)"
.br
.RI "\fIDecrease the internal value pointer and returns the value. \fP"
.ti -1c
.RI "XSAutoreleased \fBXSObject\fP \fBXSArray_RemoveValueAtIndex\fP (\fBXSArray\fP xsThis, \fBXSUInteger\fP i)"
.br
.RI "\fIRemoves a value at a specific index. \fP"
.ti -1c
.RI "XSAutoreleased \fBXSObject\fP \fBXSArray_ReplaceValueAtIndex\fP (\fBXSArray\fP xsThis, \fBXSObject\fP value, \fBXSUInteger\fP i)"
.br
.RI "\fIReplace the value at a specific index with a new value. \fP"
.ti -1c
.RI "void \fBXSArray_Rewind\fP (\fBXSArray\fP xsThis)"
.br
.RI "\fISets the internal value pointer to the first value in the array. \fP"
.ti -1c
.RI "XSAutoreleased \fBXSObject\fP \fBXSArray_ValueAtIndex\fP (\fBXSArray\fP array, \fBXSUInteger\fP i)"
.br
.RI "\fIGets the value at a specific index. \fP"
.in -1c
.SH "Detailed Description"
.PP 
XSArray class functions. 

\fBAuthor:\fP
.RS 4
Jean-David Gadina <macmade@eosgarden.com> 
.RE
.PP

.PP
Definition in file \fBXSArray.h\fP.
.SH "Typedef Documentation"
.PP 
.SS "\fBXSArray\fP"
.PP
Opaque type for the XSArray objects. 
.PP
Definition at line 50 of file XSArray.h.
.SH "Function Documentation"
.PP 
.SS "XSStatic \fBXSObject\fP XSArray_Alloc (void)"
.PP
Object allocator. \fBReturns:\fP
.RS 4
The allocated object 
.RE
.PP

.SS "void XSArray_AppendValue (\fBXSArray\fPxsThis, \fBXSObject\fPvalue)"
.PP
Appends a value at the end of the array. The appended value will be automatically retained. 
.PP
\fBParameters:\fP
.RS 4
\fIxsThis\fP The array object 
.br
\fIvalue\fP The value to append 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "\fBBOOL\fP XSArray_ContainsValue (\fBXSArray\fPxsThis, \fBXSObject\fPvalue)"
.PP
Checks if the array contains a specific value. \fBParameters:\fP
.RS 4
\fIxsThis\fP The array object 
.br
\fIvalue\fP The value to search 
.RE
.PP
\fBReturns:\fP
.RS 4
YES if the array contains the value, otherwise NO 
.RE
.PP

.SS "\fBXSUInteger\fP XSArray_Count (\fBXSArray\fPxsThis)"
.PP
Gets the number of values in the array. \fBParameters:\fP
.RS 4
\fIxsThis\fP The array object 
.RE
.PP
\fBReturns:\fP
.RS 4
The number of values in the array 
.RE
.PP

.SS "XSAutoreleased \fBXSObject\fP XSArray_Current (\fBXSArray\fPxsThis)"
.PP
Gets the current array value. \fBParameters:\fP
.RS 4
\fIxsThis\fP The array object 
.RE
.PP
\fBReturns:\fP
.RS 4
The current array value 
.RE
.PP

.SS "\fBXSUInteger\fP XSArray_Index (\fBXSArray\fPxsThis)"
.PP
Gets the current array index. \fBParameters:\fP
.RS 4
\fIxsThis\fP The array object 
.RE
.PP
\fBReturns:\fP
.RS 4
The current array index 
.RE
.PP

.SS "\fBXSObject\fP XSArray_Init (\fBXSObject\fPxsThis)"
.PP
Initializes an empty array. \fBParameters:\fP
.RS 4
\fIxsThis\fP The array object 
.RE
.PP
\fBReturns:\fP
.RS 4
The array object 
.RE
.PP

.SS "\fBXSArray\fP XSArray_InitWithCapacity (\fBXSArray\fPxsThis, \fBXSUInteger\fPcapacity)"
.PP
Initializes an empty array with an initial capacity. \fBParameters:\fP
.RS 4
\fIxsThis\fP The array object 
.br
\fIcapacity\fP The initial array capacity 
.RE
.PP
\fBReturns:\fP
.RS 4
The array object 
.RE
.PP

.SS "\fBXSArray\fP XSArray_InitWithValues (\fBXSArray\fPxsThis, \fBXSObject\fPvalue1, ...)"
.PP
Initializes an array with values. \fBParameters:\fP
.RS 4
\fIxsThis\fP The array object 
.br
\fIvalue1\fP The first value 
.br
\fI...\fP Other values, terminated by a NULL fence. 
.RE
.PP
\fBReturns:\fP
.RS 4
The array object 
.RE
.PP

.SS "void XSArray_InsertValueAtIndex (\fBXSArray\fPxsThis, \fBXSObject\fPvalue, \fBXSUInteger\fPi)"
.PP
Insert a value at a specific index. The inserted value will be automatically retained. 
.PP
\fBParameters:\fP
.RS 4
\fIxsThis\fP The array object 
.br
\fIvalue\fP The value to insert 
.br
\fIi\fP The index in the array 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "XSAutoreleased \fBXSObject\fP XSArray_Next (\fBXSArray\fPxsThis)"
.PP
Increases the internal value pointer and returns the value. \fBParameters:\fP
.RS 4
\fIxsThis\fP The array object 
.RE
.PP
\fBReturns:\fP
.RS 4
The array value 
.RE
.PP

.SS "XSAutoreleased \fBXSObject\fP XSArray_Previous (\fBXSArray\fPxsThis)"
.PP
Decrease the internal value pointer and returns the value. \fBParameters:\fP
.RS 4
\fIxsThis\fP The array object 
.RE
.PP
\fBReturns:\fP
.RS 4
The array value 
.RE
.PP

.SS "XSAutoreleased \fBXSObject\fP XSArray_RemoveValueAtIndex (\fBXSArray\fPxsThis, \fBXSUInteger\fPi)"
.PP
Removes a value at a specific index. The removed value will be released, so it may be NULL 
.PP
\fBParameters:\fP
.RS 4
\fIxsThis\fP The array object 
.br
\fIi\fP The index in the array 
.RE
.PP
\fBReturns:\fP
.RS 4
The removed value 
.RE
.PP

.SS "XSAutoreleased \fBXSObject\fP XSArray_ReplaceValueAtIndex (\fBXSArray\fPxsThis, \fBXSObject\fPvalue, \fBXSUInteger\fPi)"
.PP
Replace the value at a specific index with a new value. The new value will be automatically retained, and the old value will be released. 
.PP
\fBParameters:\fP
.RS 4
\fIxsThis\fP The array object 
.br
\fIvalue\fP The value to insert 
.br
\fIi\fP The index in the array 
.RE
.PP
\fBReturns:\fP
.RS 4
The old value 
.RE
.PP

.SS "void XSArray_Rewind (\fBXSArray\fPxsThis)"
.PP
Sets the internal value pointer to the first value in the array. \fBParameters:\fP
.RS 4
\fIxsThis\fP The array object 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "XSAutoreleased \fBXSObject\fP XSArray_ValueAtIndex (\fBXSArray\fParray, \fBXSUInteger\fPi)"
.PP
Gets the value at a specific index. \fBParameters:\fP
.RS 4
\fIarray\fP The array object 
.br
\fIi\fP The index in the array 
.RE
.PP
\fBReturns:\fP
.RS 4
The array value 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for XSFoundation from the source code.
