.TH "XSDictionary.h" 3 "Sun Apr 24 2011" "Version 1.2.2-0" "XSFoundation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
XSDictionary.h \- 
.PP
XSDictionary class functions.  

.SH SYNOPSIS
.br
.PP
\fC#include 'XSMacros.h'\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBXSDICTIONARY_DEFAULT_CAPACITY\fP   256"
.br
.RI "\fIDefault capacity for the empty dictionaries. \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fB__XSDictionary_Struct\fP * \fBXSDictionary\fP"
.br
.RI "\fIOpaque type for the XSDictionary objects. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "XSStatic \fBXSObject\fP \fBXSDictionary_Alloc\fP (void)"
.br
.RI "\fIObject allocator. \fP"
.ti -1c
.RI "\fBBOOL\fP \fBXSDictionary_ContainsValue\fP (\fBXSDictionary\fP xsThis, \fBXSObject\fP value)"
.br
.RI "\fIChecks if the dictionary contains a specific value. \fP"
.ti -1c
.RI "\fBXSUInteger\fP \fBXSDictionary_Count\fP (\fBXSDictionary\fP xsThis)"
.br
.RI "\fIGets the number of values in the dictionary. \fP"
.ti -1c
.RI "\fBXSObject\fP \fBXSDictionary_Init\fP (\fBXSObject\fP xsThis)"
.br
.RI "\fIInitializes an empty dictionary. \fP"
.ti -1c
.RI "\fBXSDictionary\fP \fBXSDictionary_InitWithCapacity\fP (\fBXSDictionary\fP xsThis, \fBXSUInteger\fP capacity)"
.br
.RI "\fIInitializes an empty dictionary with an initial capacity. \fP"
.ti -1c
.RI "\fBXSDictionary\fP \fBXSDictionary_InitWithKeysAndValues\fP (\fBXSDictionary\fP xsThis, \fBXSString\fP key1, \fBXSObject\fP value1,...)"
.br
.RI "\fIInitializes a dictionary with keys and values. \fP"
.ti -1c
.RI "\fBBOOL\fP \fBXSDictionary_KeyExists\fP (\fBXSDictionary\fP xsThis, \fBXSString\fP value)"
.br
.RI "\fIChecks if the dictionary contains a specific key. \fP"
.ti -1c
.RI "XSAutoreleased \fBXSArray\fP \fBXSDictionary_Keys\fP (\fBXSDictionary\fP xsThis)"
.br
.RI "\fIGets an array with all the dictionary keys. \fP"
.ti -1c
.RI "XSAutoreleased \fBXSObject\fP \fBXSDictionary_RemoveValueForKey\fP (\fBXSDictionary\fP xsThis, \fBXSString\fP key)"
.br
.RI "\fIRemove a value for a specific key. \fP"
.ti -1c
.RI "void \fBXSDictionary_SetValueForKey\fP (\fBXSDictionary\fP xsThis, \fBXSObject\fP value, \fBXSString\fP key)"
.br
.RI "\fIAdds a value for a specific key. \fP"
.ti -1c
.RI "\fBXSObject\fP \fBXSDictionary_ValueForKey\fP (\fBXSDictionary\fP xsThis, \fBXSString\fP key)"
.br
.RI "\fIGets the value associated with a key. \fP"
.ti -1c
.RI "XSAutoreleased \fBXSArray\fP \fBXSDictionary_Values\fP (\fBXSDictionary\fP xsThis)"
.br
.RI "\fIGets an array with all the dictionary values. \fP"
.in -1c
.SH "Detailed Description"
.PP 
XSDictionary class functions. 

\fBAuthor:\fP
.RS 4
Jean-David Gadina <macmade@eosgarden.com> 
.RE
.PP

.PP
Definition in file \fBXSDictionary.h\fP.
.SH "Define Documentation"
.PP 
.SS "#define XSDICTIONARY_DEFAULT_CAPACITY   256"
.PP
Default capacity for the empty dictionaries. 
.PP
Definition at line 50 of file XSDictionary.h.
.SH "Typedef Documentation"
.PP 
.SS "\fBXSDictionary\fP"
.PP
Opaque type for the XSDictionary objects. 
.PP
Definition at line 56 of file XSDictionary.h.
.SH "Function Documentation"
.PP 
.SS "XSStatic \fBXSObject\fP XSDictionary_Alloc (void)"
.PP
Object allocator. \fBReturns:\fP
.RS 4
The allocated object 
.RE
.PP

.SS "\fBBOOL\fP XSDictionary_ContainsValue (\fBXSDictionary\fPxsThis, \fBXSObject\fPvalue)"
.PP
Checks if the dictionary contains a specific value. \fBParameters:\fP
.RS 4
\fIxsThis\fP The dictionary object 
.br
\fIvalue\fP The value to search 
.RE
.PP
\fBReturns:\fP
.RS 4
YES if the dictionary contains the value, otherwise NO 
.RE
.PP

.SS "\fBXSUInteger\fP XSDictionary_Count (\fBXSDictionary\fPxsThis)"
.PP
Gets the number of values in the dictionary. \fBParameters:\fP
.RS 4
\fIxsThis\fP The dictionary object 
.RE
.PP
\fBReturns:\fP
.RS 4
The number of values in the dictionary 
.RE
.PP

.SS "\fBXSObject\fP XSDictionary_Init (\fBXSObject\fPxsThis)"
.PP
Initializes an empty dictionary. \fBParameters:\fP
.RS 4
\fIxsThis\fP The dictionary object 
.RE
.PP
\fBReturns:\fP
.RS 4
The new dictionary object 
.RE
.PP

.SS "\fBXSDictionary\fP XSDictionary_InitWithCapacity (\fBXSDictionary\fPxsThis, \fBXSUInteger\fPcapacity)"
.PP
Initializes an empty dictionary with an initial capacity. \fBParameters:\fP
.RS 4
\fIxsThis\fP The dictionary object 
.br
\fIcapacity\fP The initial dictionary capacity 
.RE
.PP
\fBReturns:\fP
.RS 4
The new dictionary object 
.RE
.PP

.SS "\fBXSDictionary\fP XSDictionary_InitWithKeysAndValues (\fBXSDictionary\fPxsThis, \fBXSString\fPkey1, \fBXSObject\fPvalue1, ...)"
.PP
Initializes a dictionary with keys and values. \fBParameters:\fP
.RS 4
\fIxsThis\fP The dictionary object 
.br
\fIkey1\fP The first key 
.br
\fIvalue1\fP The first value 
.br
\fI...\fP Other values and keys, terminated by a NULL fence 
.RE
.PP
\fBReturns:\fP
.RS 4
The new dictionary object 
.RE
.PP

.SS "\fBBOOL\fP XSDictionary_KeyExists (\fBXSDictionary\fPxsThis, \fBXSString\fPvalue)"
.PP
Checks if the dictionary contains a specific key. \fBParameters:\fP
.RS 4
\fIxsThis\fP The dictionary object 
.br
\fIvalue\fP The key to search 
.RE
.PP
\fBReturns:\fP
.RS 4
YES if the dictionary contains the key, otherwise NO 
.RE
.PP

.SS "XSAutoreleased \fBXSArray\fP XSDictionary_Keys (\fBXSDictionary\fPxsThis)"
.PP
Gets an array with all the dictionary keys. You are responsible to release the array returned by this function. 
.PP
\fBParameters:\fP
.RS 4
\fIxsThis\fP The dictionary object 
.RE
.PP
\fBReturns:\fP
.RS 4
An array containing all the dictionary keys 
.RE
.PP

.SS "XSAutoreleased \fBXSObject\fP XSDictionary_RemoveValueForKey (\fBXSDictionary\fPxsThis, \fBXSString\fPkey)"
.PP
Remove a value for a specific key. \fBParameters:\fP
.RS 4
\fIxsThis\fP The dictionary object 
.br
\fIkey\fP The key 
.RE
.PP
\fBReturns:\fP
.RS 4
The removed value 
.RE
.PP

.SS "void XSDictionary_SetValueForKey (\fBXSDictionary\fPxsThis, \fBXSObject\fPvalue, \fBXSString\fPkey)"
.PP
Adds a value for a specific key. \fBParameters:\fP
.RS 4
\fIxsThis\fP The dictionary object 
.br
\fIvalue\fP The value 
.br
\fIkey\fP The key 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "\fBXSObject\fP XSDictionary_ValueForKey (\fBXSDictionary\fPxsThis, \fBXSString\fPkey)"
.PP
Gets the value associated with a key. \fBParameters:\fP
.RS 4
\fIxsThis\fP The dictionary object 
.br
\fIkey\fP The key 
.RE
.PP
\fBReturns:\fP
.RS 4
THe value, or NULL if the key is not present in the dictionary 
.RE
.PP

.SS "XSAutoreleased \fBXSArray\fP XSDictionary_Values (\fBXSDictionary\fPxsThis)"
.PP
Gets an array with all the dictionary values. You are responsible to release the array returned by this function. 
.PP
\fBParameters:\fP
.RS 4
\fIxsThis\fP The dictionary object 
.RE
.PP
\fBReturns:\fP
.RS 4
An array containing all the dictionary values 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for XSFoundation from the source code.
