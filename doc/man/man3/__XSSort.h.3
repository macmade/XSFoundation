.TH "__XSSort.h" 3 "Sun Apr 24 2011" "Version 1.2.2-0" "XSFoundation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
__XSSort.h \- 
.PP
Private sort functions.  

.SH SYNOPSIS
.br
.PP
\fC#include '../XSMacros.h'\fP
.br
\fC#include 'XS.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "XS_EXTERN_C_BEGIN void \fB__XSShellSortChar\fP (char *values, \fBXSUInteger\fP size)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "void \fB__XSShellSortDouble\fP (double *values, \fBXSUInteger\fP size)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "void \fB__XSShellSortFloat\fP (float *values, \fBXSUInteger\fP size)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "void \fB__XSShellSortInt\fP (int *values, \fBXSUInteger\fP size)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "void \fB__XSShellSortInteger\fP (\fBXSInteger\fP *values, \fBXSUInteger\fP size)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "void \fB__XSShellSortLong\fP (long *values, \fBXSUInteger\fP size)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "void \fB__XSShellSortLongLong\fP (long long *values, \fBXSUInteger\fP size)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "void \fB__XSShellSortShort\fP (short *values, \fBXSUInteger\fP size)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "void \fB__XSShellSortUChar\fP (unsigned char *values, \fBXSUInteger\fP size)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "void \fB__XSShellSortUInt\fP (unsigned int *values, \fBXSUInteger\fP size)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "void \fB__XSShellSortUInteger\fP (\fBXSUInteger\fP *values, \fBXSUInteger\fP size)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "void \fB__XSShellSortULong\fP (unsigned long *values, \fBXSUInteger\fP size)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "void \fB__XSShellSortULongLong\fP (unsigned long long *values, \fBXSUInteger\fP size)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "void \fB__XSShellSortUShort\fP (unsigned short *values, \fBXSUInteger\fP size)"
.br
.RI "\fI... \fP"
.in -1c
.SH "Detailed Description"
.PP 
Private sort functions. 

\fBAuthor:\fP
.RS 4
Jean-David Gadina <macmade@eosgarden.com> 
.RE
.PP

.PP
Definition in file \fB__XSSort.h\fP.
.SH "Function Documentation"
.PP 
.SS "XS_EXTERN_C_BEGIN void __XSShellSortChar (char *values, \fBXSUInteger\fPsize)"
.PP
... \fBParameters:\fP
.RS 4
\fIvalues\fP The values to sort 
.br
\fIsize\fP The number of values 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "void __XSShellSortDouble (double *values, \fBXSUInteger\fPsize)"
.PP
... \fBParameters:\fP
.RS 4
\fIvalues\fP The values to sort 
.br
\fIsize\fP The number of values 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "void __XSShellSortFloat (float *values, \fBXSUInteger\fPsize)"
.PP
... \fBParameters:\fP
.RS 4
\fIvalues\fP The values to sort 
.br
\fIsize\fP The number of values 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "void __XSShellSortInt (int *values, \fBXSUInteger\fPsize)"
.PP
... \fBParameters:\fP
.RS 4
\fIvalues\fP The values to sort 
.br
\fIsize\fP The number of values 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "void __XSShellSortInteger (\fBXSInteger\fP *values, \fBXSUInteger\fPsize)"
.PP
... \fBParameters:\fP
.RS 4
\fIvalues\fP The values to sort 
.br
\fIsize\fP The number of values 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "void __XSShellSortLong (long *values, \fBXSUInteger\fPsize)"
.PP
... \fBParameters:\fP
.RS 4
\fIvalues\fP The values to sort 
.br
\fIsize\fP The number of values 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "void __XSShellSortLongLong (long long *values, \fBXSUInteger\fPsize)"
.PP
... \fBParameters:\fP
.RS 4
\fIvalues\fP The values to sort 
.br
\fIsize\fP The number of values 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "void __XSShellSortShort (short *values, \fBXSUInteger\fPsize)"
.PP
... \fBParameters:\fP
.RS 4
\fIvalues\fP The values to sort 
.br
\fIsize\fP The number of values 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "void __XSShellSortUChar (unsigned char *values, \fBXSUInteger\fPsize)"
.PP
... \fBParameters:\fP
.RS 4
\fIvalues\fP The values to sort 
.br
\fIsize\fP The number of values 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "void __XSShellSortUInt (unsigned int *values, \fBXSUInteger\fPsize)"
.PP
... \fBParameters:\fP
.RS 4
\fIvalues\fP The values to sort 
.br
\fIsize\fP The number of values 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "void __XSShellSortUInteger (\fBXSUInteger\fP *values, \fBXSUInteger\fPsize)"
.PP
... \fBParameters:\fP
.RS 4
\fIvalues\fP The values to sort 
.br
\fIsize\fP The number of values 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "void __XSShellSortULong (unsigned long *values, \fBXSUInteger\fPsize)"
.PP
... \fBParameters:\fP
.RS 4
\fIvalues\fP The values to sort 
.br
\fIsize\fP The number of values 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "void __XSShellSortULongLong (unsigned long long *values, \fBXSUInteger\fPsize)"
.PP
... \fBParameters:\fP
.RS 4
\fIvalues\fP The values to sort 
.br
\fIsize\fP The number of values 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "void __XSShellSortUShort (unsigned short *values, \fBXSUInteger\fPsize)"
.PP
... \fBParameters:\fP
.RS 4
\fIvalues\fP The values to sort 
.br
\fIsize\fP The number of values 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for XSFoundation from the source code.
