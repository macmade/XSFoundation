.TH "XSMacrosTarget.h" 3 "Sun Apr 24 2011" "Version 1.2.2-0" "XSFoundation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
XSMacrosTarget.h \- 
.PP
Autoconfiguration of TARGET_ conditionals.  

.SH SYNOPSIS
.br
.PP
\fC#include 'XSMacros.h'\fP
.br

.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBTARGET_CPU_68K\fP   0"
.br
.RI "\fIMotorola M68k processor. \fP"
.ti -1c
.RI "#define \fBTARGET_CPU_ALPHA\fP   0"
.br
.RI "\fIAlpha processor. \fP"
.ti -1c
.RI "#define \fBTARGET_CPU_ARM\fP   0"
.br
.RI "\fIARM processor. \fP"
.ti -1c
.RI "#define \fBTARGET_CPU_MIPS\fP   0"
.br
.RI "\fIMIPS processor. \fP"
.ti -1c
.RI "#define \fBTARGET_CPU_PPC\fP   0"
.br
.RI "\fIPowerPC processor. \fP"
.ti -1c
.RI "#define \fBTARGET_CPU_PPC64\fP   0"
.br
.RI "\fI64bits PowerPC processor \fP"
.ti -1c
.RI "#define \fBTARGET_CPU_SPARC\fP   0"
.br
.RI "\fISPARC processor. \fP"
.ti -1c
.RI "#define \fBTARGET_CPU_X86\fP   0"
.br
.RI "\fIx86 processor \fP"
.ti -1c
.RI "#define \fBTARGET_CPU_X86_64\fP   0"
.br
.RI "\fI64bits x86 processor \fP"
.ti -1c
.RI "#define \fBTARGET_RT_64_BIT\fP   0"
.br
.RI "\fI64bits system \fP"
.ti -1c
.RI "#define \fBTARGET_RT_BIG_ENDIAN\fP   0"
.br
.RI "\fIBug endian system. \fP"
.ti -1c
.RI "#define \fBTARGET_RT_LITTLE_ENDIAN\fP   1"
.br
.RI "\fILittle endian system. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Autoconfiguration of TARGET_ conditionals. 

\fBAuthor:\fP
.RS 4
Jean-David Gadina <macmade@eosgarden.com>
.RE
.PP
TARGET_CPU_* These conditionals specify which microprocessor instruction set is being generated. At most one of these is true, the rest are false:
.PP
.IP "\(bu" 2
TARGET_CPU_PPC - PowerPC instructions for 32-bit mode
.IP "\(bu" 2
TARGET_CPU_PPC64 - PowerPC instructions for 64-bit mode
.IP "\(bu" 2
TARGET_CPU_68K - 680x0 instructions
.IP "\(bu" 2
TARGET_CPU_X86 - x86 instructions
.IP "\(bu" 2
TARGET_CPU_ARM - ARM instructions
.IP "\(bu" 2
TARGET_CPU_MIPS - MIPS instructions
.IP "\(bu" 2
TARGET_CPU_SPARC - Sparc instructions
.IP "\(bu" 2
TARGET_CPU_ALPHA - Dec Alpha instructions
.PP
.PP
TARGET_RT_* These conditionals specify in which runtime the generated code will run.
.PP
.IP "\(bu" 2
TARGET_RT_LITTLE_ENDIAN - Little endian format for integers
.IP "\(bu" 2
TARGET_RT_BIG_ENDIAN - Big endian format for integers
.IP "\(bu" 2
TARGET_RT_64_BIT - 64-bit pointers 
.PP

.PP
Definition in file \fBXSMacrosTarget.h\fP.
.SH "Define Documentation"
.PP 
.SS "#define TARGET_CPU_68K   0"
.PP
Motorola M68k processor. 
.PP
Definition at line 383 of file XSMacrosTarget.h.
.SS "#define TARGET_CPU_ALPHA   0"
.PP
Alpha processor. 
.PP
Definition at line 389 of file XSMacrosTarget.h.
.SS "#define TARGET_CPU_ARM   0"
.PP
ARM processor. 
.PP
Definition at line 386 of file XSMacrosTarget.h.
.SS "#define TARGET_CPU_MIPS   0"
.PP
MIPS processor. 
.PP
Definition at line 387 of file XSMacrosTarget.h.
.SS "#define TARGET_CPU_PPC   0"
.PP
PowerPC processor. 
.PP
Definition at line 381 of file XSMacrosTarget.h.
.SS "#define TARGET_CPU_PPC64   0"
.PP
64bits PowerPC processor 
.PP
Definition at line 382 of file XSMacrosTarget.h.
.SS "#define TARGET_CPU_SPARC   0"
.PP
SPARC processor. 
.PP
Definition at line 388 of file XSMacrosTarget.h.
.SS "#define TARGET_CPU_X86   0"
.PP
x86 processor 
.PP
Definition at line 384 of file XSMacrosTarget.h.
.SS "#define TARGET_CPU_X86_64   0"
.PP
64bits x86 processor 
.PP
Definition at line 385 of file XSMacrosTarget.h.
.SS "#define TARGET_RT_64_BIT   0"
.PP
64bits system 
.PP
Definition at line 411 of file XSMacrosTarget.h.
.SS "#define TARGET_RT_BIG_ENDIAN   0"
.PP
Bug endian system. 
.PP
Definition at line 400 of file XSMacrosTarget.h.
.SS "#define TARGET_RT_LITTLE_ENDIAN   1"
.PP
Little endian system. 
.PP
Definition at line 401 of file XSMacrosTarget.h.
.SH "Author"
.PP 
Generated automatically by Doxygen for XSFoundation from the source code.
