.TH "XSApplication.h" 3 "Sun Apr 24 2011" "Version 1.2.2-0" "XSFoundation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
XSApplication.h \- 
.PP
XSApplication class functions.  

.SH SYNOPSIS
.br
.PP
\fC#include 'XSMacros.h'\fP
.br
\fC#include 'XSArray.h'\fP
.br
\fC#include 'XSString.h'\fP
.br
\fC#include 'XSApplicationArgument.h'\fP
.br

.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fB__XSApplication_Struct\fP * \fBXSApplication\fP"
.br
.RI "\fIOpaque type for the XSApplication objects. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "XSStatic \fBXSObject\fP \fBXSApplication_Alloc\fP (void)"
.br
.RI "\fIObject allocator. \fP"
.ti -1c
.RI "XSStatic void \fBXSApplication_Exit\fP (void)"
.br
.RI "\fIApplication termination. \fP"
.ti -1c
.RI "\fBXSApplicationArgument\fP \fBXSApplication_GetArgument\fP (\fBXSApplication\fP xsThis, const char *name)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "\fBBOOL\fP \fBXSApplication_GetFlag\fP (\fBXSApplication\fP xsThis, const char *name)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "\fBXSFloat\fP \fBXSApplication_GetFloat\fP (\fBXSApplication\fP xsThis, const char *name)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "\fBXSInteger\fP \fBXSApplication_GetInteger\fP (\fBXSApplication\fP xsThis, const char *name)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "\fBXSString\fP \fBXSApplication_GetString\fP (\fBXSApplication\fP xsThis, const char *name)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "XSAutoreleased \fBXSArray\fP \fBXSApplication_GetUnnamedArguments\fP (\fBXSApplication\fP xsThis)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "\fBXSUInteger\fP \fBXSApplication_GetUnsignedInteger\fP (\fBXSApplication\fP xsThis, const char *name)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "\fBBOOL\fP \fBXSApplication_HasArgument\fP (\fBXSApplication\fP xsThis, const char *name)"
.br
.RI "\fI... \fP"
.ti -1c
.RI "\fBXSObject\fP \fBXSApplication_Init\fP (\fBXSObject\fP xsThis)"
.br
.RI "\fIInitialize an application object. \fP"
.ti -1c
.RI "void \fBXSApplication_PrintHelp\fP (\fBXSApplication\fP xsThis, const char *description)"
.br
.RI "\fIPrints the application help dialog. \fP"
.ti -1c
.RI "void \fBXSApplication_RegisterArgument\fP (\fBXSApplication\fP xsThis, const char *name, \fBXSApplicationArgumentType\fP type, const char *help)"
.br
.ti -1c
.RI "XSStatic \fBXSApplication\fP \fBXSApplication_SharedApplication\fP (void)"
.br
.RI "\fIGets the application object. \fP"
.ti -1c
.RI "XSStatic \fBXSApplication\fP \fBXSApplication_Start\fP (int argc, const char **argv)"
.br
.RI "\fIXSFoundation start routine. \fP"
.in -1c
.SH "Detailed Description"
.PP 
XSApplication class functions. 

\fBAuthor:\fP
.RS 4
Jean-David Gadina <macmade@eosgarden.com> 
.RE
.PP

.PP
Definition in file \fBXSApplication.h\fP.
.SH "Typedef Documentation"
.PP 
.SS "\fBXSApplication\fP"
.PP
Opaque type for the XSApplication objects. 
.PP
Definition at line 54 of file XSApplication.h.
.SH "Function Documentation"
.PP 
.SS "XSStatic \fBXSObject\fP XSApplication_Alloc (void)"
.PP
Object allocator. \fBReturns:\fP
.RS 4
The allocated object 
.RE
.PP

.SS "XSStatic void XSApplication_Exit (void)"
.PP
Application termination. You must call this function when exiting your application, instead of the classic 'exit()' function, so the auto-released memory is reclaimed, and the threads are terminated properly. 
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "\fBXSApplicationArgument\fP XSApplication_GetArgument (\fBXSApplication\fPxsThis, const char *name)"
.PP
... \fBParameters:\fP
.RS 4
\fIxsThis\fP The application object 
.br
\fIname\fP ... 
.RE
.PP
\fBReturns:\fP
.RS 4
... 
.RE
.PP

.SS "\fBBOOL\fP XSApplication_GetFlag (\fBXSApplication\fPxsThis, const char *name)"
.PP
... \fBParameters:\fP
.RS 4
\fIxsThis\fP The application object 
.br
\fIname\fP ... 
.RE
.PP
\fBReturns:\fP
.RS 4
... 
.RE
.PP

.SS "\fBXSFloat\fP XSApplication_GetFloat (\fBXSApplication\fPxsThis, const char *name)"
.PP
... \fBParameters:\fP
.RS 4
\fIxsThis\fP The application object 
.br
\fIname\fP ... 
.RE
.PP
\fBReturns:\fP
.RS 4
... 
.RE
.PP

.SS "\fBXSInteger\fP XSApplication_GetInteger (\fBXSApplication\fPxsThis, const char *name)"
.PP
... \fBParameters:\fP
.RS 4
\fIxsThis\fP The application object 
.br
\fIname\fP ... 
.RE
.PP
\fBReturns:\fP
.RS 4
... 
.RE
.PP

.SS "\fBXSString\fP XSApplication_GetString (\fBXSApplication\fPxsThis, const char *name)"
.PP
... \fBParameters:\fP
.RS 4
\fIxsThis\fP The application object 
.br
\fIname\fP ... 
.RE
.PP
\fBReturns:\fP
.RS 4
... 
.RE
.PP

.SS "XSAutoreleased \fBXSArray\fP XSApplication_GetUnnamedArguments (\fBXSApplication\fPxsThis)"
.PP
... \fBParameters:\fP
.RS 4
\fIxsThis\fP The application object 
.RE
.PP
\fBReturns:\fP
.RS 4
... 
.RE
.PP

.SS "\fBXSUInteger\fP XSApplication_GetUnsignedInteger (\fBXSApplication\fPxsThis, const char *name)"
.PP
... \fBParameters:\fP
.RS 4
\fIxsThis\fP The application object 
.br
\fIname\fP ... 
.RE
.PP
\fBReturns:\fP
.RS 4
... 
.RE
.PP

.SS "\fBBOOL\fP XSApplication_HasArgument (\fBXSApplication\fPxsThis, const char *name)"
.PP
... \fBParameters:\fP
.RS 4
\fIxsThis\fP The application object 
.br
\fIname\fP ... 
.RE
.PP
\fBReturns:\fP
.RS 4
... 
.RE
.PP

.SS "\fBXSObject\fP XSApplication_Init (\fBXSObject\fPxsThis)"
.PP
Initialize an application object. \fBParameters:\fP
.RS 4
\fIxsThis\fP The application object 
.RE
.PP
\fBReturns:\fP
.RS 4
The allocated object 
.RE
.PP

.SS "void XSApplication_PrintHelp (\fBXSApplication\fPxsThis, const char *description)"
.PP
Prints the application help dialog. \fBParameters:\fP
.RS 4
\fIxsThis\fP The application object 
.br
\fIdescription\fP ... 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "void XSApplication_RegisterArgument (\fBXSApplication\fPxsThis, const char *name, \fBXSApplicationArgumentType\fPtype, const char *help)"\fBParameters:\fP
.RS 4
\fIxsThis\fP The application object 
.br
\fIname\fP ... 
.br
\fItype\fP ... 
.br
\fIhelp\fP ... 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.SS "XSStatic \fBXSApplication\fP XSApplication_SharedApplication (void)"
.PP
Gets the application object. \fBReturns:\fP
.RS 4
The application object 
.RE
.PP

.SS "XSStatic \fBXSApplication\fP XSApplication_Start (intargc, const char **argv)"
.PP
XSFoundation start routine. You must call this function before using any other XSFoundation function or object. Note that an auto-release pool is automatically created, so the auto-release features are enabled by default. 
.PP
\fBParameters:\fP
.RS 4
\fIargc\fP The number of CLI arguments 
.br
\fIargv\fP The CLI arguments array 
.RE
.PP
\fBReturns:\fP
.RS 4
The application object 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for XSFoundation from the source code.
