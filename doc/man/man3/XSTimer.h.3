.TH "XSTimer.h" 3 "Sun Apr 24 2011" "Version 1.2.2-0" "XSFoundation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
XSTimer.h \- 
.PP
XSTimer class functions.  

.SH SYNOPSIS
.br
.PP
\fC#include 'XSMacros.h'\fP
.br

.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fB__XSTimer_Struct\fP * \fBXSTimer\fP"
.br
.RI "\fIOpaque type for the XSTree objects. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "XSStatic \fBXSObject\fP \fBXSTimer_Alloc\fP (void)"
.br
.RI "\fIObject allocator. \fP"
.ti -1c
.RI "\fBXSObject\fP \fBXSTimer_Init\fP (\fBXSTimer\fP xsThis, void(*func)(\fBXSTimer\fP timer), \fBXSUInteger\fP milliseconds)"
.br
.RI "\fIInitializes a timer object scheduled to run at a specific time. \fP"
.ti -1c
.RI "void \fBXSTimer_Invalidate\fP (\fBXSTimer\fP xsThis)"
.br
.RI "\fIInvalidates a timer scheduled to repeat. \fP"
.ti -1c
.RI "\fBBOOL\fP \fBXSTimer_IsValid\fP (\fBXSTimer\fP xsThis)"
.br
.RI "\fIChecks whether a timer is valid or not. \fP"
.ti -1c
.RI "void \fBXSTimer_RunAndRepeat\fP (\fBXSTimer\fP xsThis)"
.br
.RI "\fIRuns a specific timer every time its time interval has been reached. \fP"
.ti -1c
.RI "void \fBXSTimer_RunOnce\fP (\fBXSTimer\fP xsThis)"
.br
.RI "\fIRuns a specific timer once, after its time interval has been reached. \fP"
.in -1c
.SH "Detailed Description"
.PP 
XSTimer class functions. 

\fBAuthor:\fP
.RS 4
Jean-David Gadina <macmade@eosgarden.com> 
.RE
.PP

.PP
Definition in file \fBXSTimer.h\fP.
.SH "Typedef Documentation"
.PP 
.SS "\fBXSTimer\fP"
.PP
Opaque type for the XSTree objects. 
.PP
Definition at line 50 of file XSTimer.h.
.SH "Function Documentation"
.PP 
.SS "XSStatic \fBXSObject\fP XSTimer_Alloc (void)"
.PP
Object allocator. \fBReturns:\fP
.RS 4
The allocated object 
.RE
.PP

.SS "\fBXSObject\fP XSTimer_Init (\fBXSTimer\fPxsThis, void(*)(\fBXSTimer\fP timer)func, \fBXSUInteger\fPmilliseconds)"
.PP
Initializes a timer object scheduled to run at a specific time. \fBParameters:\fP
.RS 4
\fIxsThis\fP The timer object 
.br
\fIfunc\fP A pointer to to function to call when the timer fires 
.br
\fImilliseconds\fP The timer interval, in milliseconds 
.RE
.PP
\fBReturns:\fP
.RS 4
The timer object 
.RE
.PP

.SS "void XSTimer_Invalidate (\fBXSTimer\fPxsThis)"
.PP
Invalidates a timer scheduled to repeat. \fBParameters:\fP
.RS 4
\fIxsThis\fP The timer object 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "\fBBOOL\fP XSTimer_IsValid (\fBXSTimer\fPxsThis)"
.PP
Checks whether a timer is valid or not. \fBParameters:\fP
.RS 4
\fIxsThis\fP The timer object 
.RE
.PP
\fBReturns:\fP
.RS 4
True if the timer is valid, otherwise false 
.RE
.PP

.SS "void XSTimer_RunAndRepeat (\fBXSTimer\fPxsThis)"
.PP
Runs a specific timer every time its time interval has been reached. \fBParameters:\fP
.RS 4
\fIxsThis\fP The timer object 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SS "void XSTimer_RunOnce (\fBXSTimer\fPxsThis)"
.PP
Runs a specific timer once, after its time interval has been reached. \fBParameters:\fP
.RS 4
\fIxsThis\fP The timer object 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for XSFoundation from the source code.
