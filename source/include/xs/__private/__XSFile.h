/*******************************************************************************
 * Copyright (c) 2011, Jean-David Gadina <macmade@eosgarden.com>
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

/* $Id$ */

/*!
 * @header      __XSFile.h
 * @copyright   eosgarden 2011 - Jean-David Gadina <macmade@eosgarden.com>
 * @abstract    Private XSFile class definitions
 */

#ifndef ___XS_FILE_H_
#define ___XS_FILE_H_
#pragma once

#include "../XSMacros.h"

XS_EXTERN_C_BEGIN

#include "XS.h"

/*!
 * @typdef      __XSFile
 * @abastract   XSFile class
 * @field       __class     Runtime class
 * @field       fp          The FILE pointer
 * @field       filename    The name of the file
 * @field       mode        The file open mode
 * @field       writeable   Whether the file is writeable
 * @field       readable    Whether the file is readabe
 * @field       is_stdin    Wheter the file represents stdin
 * @field       is_stdout   Wheter the file represents stdout
 * @field       is_stderr   Wheter the file represents stderr
 * @field       need_init   Whether the file needs initialization (for stdin, stdout and stderr only)
 * @field       bit_buffer  Bit buffer
 * @field       bit_count   Bit count
 * @field       bit_offset  Offset for the bit buffer
 * @field       stat_buf    Stat informations
 */
typedef struct __XSFile_Struct
{
    XSRuntimeClass __class;
    FILE         * fp;
    char           filename[ FILENAME_MAX ];
    char           mode[ 4 ];
    BOOL           writeable;
    BOOL           readable;
    BOOL           is_stdin;
    BOOL           is_stdout;
    BOOL           is_stderr;
    BOOL           need_init;
    uint8_t        bit_buffer;
    uint8_t        bit_count;
    uint8_t        bit_offset;
    struct stat    stat_buf;
}
__XSFile;

/*!
 * @function    __XSFile_Initialize
 * @abstract    Runtime initialization
 * @result      void
 */
void __XSFile_Initialize( void );

/*!
 * @function    __XSFile_WriteAlign
 * @abstract    Aligns and write the bit buffer
 * @param       file    The file object
 * @result      void
 */
void __XSFile_WriteAlign( __XSFile * file );

/*!
 * @function    __XSFile_UpdateStat
 * @abstract    Updates stat informations for the file
 * @param       file    The file object
 * @result      void
 */
void __XSFile_UpdateStat( __XSFile * file );

XS_EXTERN_C_END

#endif /* ___XS_FILE_H_ */
