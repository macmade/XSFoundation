/*******************************************************************************
 * Copyright (c) 2011, Jean-David Gadina - www.xs-labs.com
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/
 
/* $Id$ */

/*!
 * @file        __XSSort.h
 * @brief       Private sort functions
 * @author      Jean-David Gadina - www.xs-labs.com
 */

#ifndef ___XS_SORT_H_
#define ___XS_SORT_H_
#pragma once

#include "../XSMacros.h"

XS_EXTERN_C_BEGIN

#include "XS.h"

/*!
 * @brief   ...
 * @param   values  The values to sort
 * @param   size    The number of values
 * @return  void
 */
void __XSShellSortChar( char * values, XSUInteger size );

/*!
 * @brief   ...
 * @param   values  The values to sort
 * @param   size    The number of values
 * @return  void
 */
void __XSShellSortUChar( unsigned char * values, XSUInteger size );

/*!
 * @brief   ...
 * @param   values  The values to sort
 * @param   size    The number of values
 * @return  void
 */
void __XSShellSortShort( short * values, XSUInteger size );

/*!
 * @brief   ...
 * @param   values  The values to sort
 * @param   size    The number of values
 * @return  void
 */
void __XSShellSortUShort( unsigned short * values, XSUInteger size );

/*!
 * @brief   ...
 * @param   values  The values to sort
 * @param   size    The number of values
 * @return  void
 */
void __XSShellSortInt( int * values, XSUInteger size );

/*!
 * @brief   ...
 * @param   values  The values to sort
 * @param   size    The number of values
 * @return  void
 */
void __XSShellSortUInt( unsigned int * values, XSUInteger size );

/*!
 * @brief   ...
 * @param   values  The values to sort
 * @param   size    The number of values
 * @return  void
 */
void __XSShellSortLong( long * values, XSUInteger size );

/*!
 * @brief   ...
 * @param   values  The values to sort
 * @param   size    The number of values
 * @return  void
 */
void __XSShellSortULong( unsigned long * values, XSUInteger size );

/*!
 * @brief   ...
 * @param   values  The values to sort
 * @param   size    The number of values
 * @return  void
 */
void __XSShellSortLongLong( long long * values, XSUInteger size );

/*!
 * @brief   ...
 * @param   values  The values to sort
 * @param   size    The number of values
 * @return  void
 */
void __XSShellSortULongLong( unsigned long long * values, XSUInteger size );

/*!
 * @brief   ...
 * @param   values  The values to sort
 * @param   size    The number of values
 * @return  void
 */
void __XSShellSortFloat( float * values, XSUInteger size );

/*!
 * @brief   ...
 * @param   values  The values to sort
 * @param   size    The number of values
 * @return  void
 */
void __XSShellSortDouble( double * values, XSUInteger size );

/*!
 * @brief   ...
 * @param   values  The values to sort
 * @param   size    The number of values
 * @return  void
 */
void __XSShellSortInteger( XSInteger * values, XSUInteger size );

/*!
 * @brief   ...
 * @param   values  The values to sort
 * @param   size    The number of values
 * @return  void
 */
void __XSShellSortUInteger( XSUInteger * values, XSUInteger size );

XS_EXTERN_C_END

#endif /* ___XS_SORT_H_ */
