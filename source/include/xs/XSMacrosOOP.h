/*******************************************************************************
 * Copyright (c) 2011, Jean-David Gadina <macmade@eosgarden.com>
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/
 
/* $Id$ */

/*!
 * @file        XSMacrosOOP.h
 * @brief       OOP macros
 * @author      St√©phane Cherpit <stef@eosgarden.com>
 * @author      Jean-David Gadina <macmade@eosgarden.com>
 */

#ifndef _XS_MACROS_OOP_H_
#define _XS_MACROS_OOP_H_
#pragma once

#include "XSMacros.h"

XS_EXTERN_C_BEGIN

/*!
 * @def     XSMethodPrototype
 * @param   cName   ...
 * @param   rType   ...
 * @param   mName   ...
 */
#define XSMethodPrototype( cName, rType, mName, ... )                           \
    typedef struct cName ## _ ## mName ## _Arguments_Struct                     \
        __VA_ARGS__                                                             \
    cName ## _ ## mName ## _Arguments;                                          \
    typedef struct cName ## _ ## mName ## _Function_Struct                      \
    {                                                                           \
        rType ( * func )( cName ## _ ## mName ## _Arguments arguments );        \
    }                                                                           \
    cName ## _ ## mName ## _Function;                                           \
    rType cName ## _ ## mName( cName ## _ ## mName ## _Arguments arguments )

/*!
 * @def     XSMethodImplementation
 * @param   cName   ...
 * @param   rType   ...
 * @param   mName   ...
 * @param   ...     ...
 */
#define XSMethodImplementation( cName, rType, mName, ... ) rType cName ## _ ## mName( cName ## _ ## mName ## _Arguments arguments )

/*!
 * @def     XSBindMethodToClass
 * @param   cName   ...
 * @param   mName   ...
 */
#define XSBindMethodToClass( cName, mName ) XSRuntime_BindMethodToClassID( XSRuntime_GetClassIDForClassWithName( #cName ), ( void ( * )( void ) )cName ## _ ## mName, #mName )

/*!
 * @def     XSCall
 * @param   cName   ...
 * @param   obj     ...
 * @param   mName   ...
 * @param   ...     ...
 */
#define XSCall( cName, obj, mName, ... ) ( ( cName ## _ ## mName ## _Function * )XSRuntime_GetMethod( obj, #mName ) )->func( ( cName ## _ ## mName ## _Arguments ){ obj, __VA_ARGS__ } )

/*!
 * @def     XSNew
 * @param   cName   ...
 */
#define XSNew( cName ) cName ## _ ## Alloc()

XS_EXTERN_C_END

#endif /* _XS_MACROS_OOP_H_ */
