/*******************************************************************************
 * Copyright (c) 2011, Jean-David Gadina <macmade@eosgarden.com>
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/
 
/* $Id$ */

/*!
 * @header      signal.h
 * @copyright   eosgarden 2011 - Jean-David Gadina <macmade@eosgarden.com>
 * @abstract    Signal functions for Windows
 */

#ifndef _XS_WIN32_SIGNAL_H_
#define _XS_WIN32_SIGNAL_H_
#pragma once

#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>
#include "sys-types.h"

#define SIGABRT     0x01
#define SIGALRM     0x02
#define SIGFPE      0x03
#define SIGHUP      0x04
#define SIGILL      0x05
#define SIGINT      0x06
#define SIGKILL     0x07
#define SIGPIPE     0x08
#define SIGQUIT     0x09
#define SIGSEGV     0x0A
#define SIGTERM     0x0B
#define SIGUSR1     0x0C
#define SIGUSR2     0x0D
#define SIGCHLD     0x0E
#define SIGCONT     0x0F
#define SIGSTOP     0x10
#define SIGTSTP     0x11
#define SIGTTIN     0x12
#define SIGTTOU     0x13
#define SIGBUS      0x14
#define SIGPOLL     0x15
#define SIGPROF     0x16
#define SIGSYS      0x17
#define SIGTRAP     0x18
#define SIGURG      0x19
#define SIGVTALRM   0x1A
#define SIGXCPU     0x1B
#define SIGXFSZ     0x1C

typedef uint64_t sigset_t;

union sigval
{
    int    sival_int;
    void * sival_ptr;
};

typedef struct
{
	int          si_signo;
	int          si_code;
	union sigval si_value;
	int          si_errno;
	pid_t        si_pid;
	uid_t        si_uid;
	void       * si_addr;
	int          si_status;
	int          si_band;
}
siginfo_t;

struct sigaction
{
    void ( * sa_handler )( int );
    sigset_t sa_mask;
    int      sa_flags;
    void ( * sa_sigaction )( int, siginfo_t *, void * );
};

int sigemptyset( sigset_t * set );
int sigaction( int sig, const struct sigaction * act, struct sigaction * oact );
    
    
#ifdef __cplusplus
}
#endif

#endif /* _XS_WIN32_SIGNAL_H_ */
