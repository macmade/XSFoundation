/*******************************************************************************
 * Copyright (c) 2010, Jean-David Gadina <macmade@eosgarden.com>
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

/* $Id$ */

/*!
 * @header      
 * @copyright   eosgarden 2011 - Jean-David Gadina <macmade@eosgarden.com>
 * @abstract    
 */

#ifndef ___XS_MEMORY_H_
#define ___XS_MEMORY_H_
#pragma once

#ifdef __cplusplus
extern "C" {
#endif

#include "XS.h"

#define XS_MEMORY_MAX_AR_POOLS  256
#define XS_MEMORY_NUM_OBJECTS   256

typedef struct _XSAutoreleasePool
{
    XSRuntimeBase _xsbase;
    size_t        size;
    size_t        num_objects;
    void **       objects;
}
XSAutoreleasePool;

typedef struct ___XSMemoryObject
{
    XSRuntimeBase _xsbase;
    XSUInteger    retain_count;
    size_t        size;
    void *        data;
}
__XSMemoryObject;

void __XSAutoreleasePool_Initialize( void );
void __XSMemoryObject_Initialize( void );

XSAutoreleasePool * __XSGetCurrentAutoreleasePool( void );
void                __XSAutoreleasePoolDrain( XSAutoreleasePool * ap );
__XSMemoryObject  * __XSGetMemoryObject( void * ptr );

extern XSAutoreleasePool * __xs_ar_pools[];
extern XSUInteger          __xs_ar_pools_num;

#ifdef __cplusplus
}
#endif

#endif /* ___XS_MEMORY_H_ */
